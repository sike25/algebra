(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    150616,       2910]
NotebookOptionsPosition[    145042,       2819]
NotebookOutlinePosition[    145443,       2835]
CellTagsIndexPosition[    145400,       2832]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Markov Chains and Google\[CloseCurlyQuote]s PageRank",
 
 FontSize->24]], "Subtitle",
 CellChangeTimes->{{3.846168505814929*^9, 
  3.846168512241581*^9}},ExpressionUUID->"82221673-937f-4055-af58-\
c2e5c353c2d2"],

Cell[TextData[{
 "Suppose that we have been observing a (hypothetical) stock market for some \
time and notice that the state of the market appears to be driven (almost \
entirely) by the current state of the market.  Naturally, there will be other \
factors at play, but this might nevertheless provide a semi-decent model to \
study.  \n\nThe states represent whether the market is a \
\[OpenCurlyDoubleQuote]bull market\[CloseCurlyDoubleQuote] (going up), a \
\[OpenCurlyDoubleQuote]bear market\[CloseCurlyDoubleQuote] (going down), or \
is stagnant.  Label the state space ",
 StyleBox["1 = bull, 2 = bear and 3 = stagnant.  ",
  FontWeight->"Bold"],
 StyleBox["Each time step in this model will represent a week.  ",
  FontSlant->"Italic"],
 "\n ",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3QW8rGW5/39AGqU8hIg0SIOA0tIdkpvu7th0d7eUIJ1uQEQQQTqkW0BB
BAQs0KN4PMeTv+d/3rf/e51h9sysmbWm5/q8XqObNfXMzPPc9/W9cs6dD9hk
94kmmGCCsZP/7/9sstPhqxx88E5Hbjrt//7H5vuP3WuP/XfbdZ39D9ltj90O
Xmbnz/3vHzf638fO9b//mPh//10EQRAEQRAEQRC0iWdeeCXdgiAIgiAIgiAI
2kXokCAIgiAIgiAI2k3okCAIgiAIgiAI2k3okCAIgiAIgiAI2k3okCAIgiAI
giAI2k3okCAIgiAIgiAI2k3okCAIgiAIgiAI2k3okCAIgiAIgiAI2k3okCAI
giAIgiAI2k3okCAIgiAIgiAI2k3okCAIgiAIgiAI2k3okCAIgqAV/L//9//S
LQiCIAgqETokCIKgP/jv//7v4j//8z+L//qv/xr6///5n/9pymvTE14v3/Lr
19IZ77zzTvHUU0+l43Ic9dxKye/l71nT5Ju/uc9rB0EQBL1J6JAgCILehl3+
m9/8pjjkkEOKFVZYodh6662LVVddtVhjjTWKcePGJXt9NLD1H3744eJb3/pW
sf766xdjxowpllxyyWKPPfYo3nzzzapa5/zzzy+++MUvFgcccEBx0UUXFZdc
cknN249//OPPPH/ttdcu1llnneKyyy4rXnzxxeKjjz4qPvzww+LZZ58trrji
imK11VYrzjrrrFF9tiAIgqBzhA4JgiDobV599dVirrnmKg4++ODi3//934f+
/swzzxRf+tKXih133HHEWoTGuOCCC4oZZpihePDBB4f+Lh5yyimnFF/4wheK
u+++u2JcZPfddy8mmGCCum4TTjhhccIJJ3zm+csuu2zVx04yySTF3nvvHfGQ
IAiCHiZ0SBAEQe/yl7/8pZhzzjmL5ZdfvmJc4p577kl2+3nnnTei17/rrrvS
88UfKiE2Ms000xTvv//+ePetuOKKxaSTTpq0yswzz1zxNtNMMxVTTDFFsdhi
ixV///vfP/N8OoTecJt44onTzestuuiixfe+970RfZ4gCIKgewgdEgRB0LuI
IYgRXH/99VUfM/fccxfTTjtt8S//8i8NvbYYyjzzzFNMNdVUxb/9279VfMzj
jz+e3n+XXXb5zN/FR8Rofv7zn9eMWfz5z38uFllkkRTTKYcOue+++4of/vCH
xVVXXVXcfPPNxWuvvdbQZwiCIAi6l9AhQRAEvYn4xxxzzJF0wNtvv131cepF
PObGG29s6PUfeuih9DyxlmrIA5tooolSTORf//Vfh/7+ySefpPqOWtAnO++8
c3HuuedWvJ8OCd0RBEHQv4QOCYIg6E1eeeWVoZqJWrEO9eses+WWWzb0+gce
eGB63mabbVbzcWpHPE7sIvPyyy/XrCEXL1FDr9a8Wp176JAgCIL+JnRIEARB
b3Lttdcm+3/yySev+Ti1IR4377zzNvT6K6+8cnrennvuWfNx6jU8Tt16vejp
O99886U+X9Uo1SG5J7Fb1KYHQRD0B6FDgiAIepNTTz012f8zzjhjzceprfC4
KaecsqHXp1s877DDDqv5uG9+85vpcXvttVddr6vuZK211iquu+66mo+jQ8R8
Pv300+LWW28tjj766FQP49/qSpo1GyUIgiDoDKFDgiAIehP6gP2vN28t2Ps5
f+s//uM/6n59+sZzjjzyyJqPM6vE49Sh1MMNN9xQrLTSSsPOWqdD1I5stNFG
qT+WGMpLL71UbL/99qku5v777w8tEgRB0MOEDgmCIOhNzM9g/3/5y1+u+bib
brppSIf88Y9/rPv1xU88RxyiFuYlepwZh8Ohz7Djvffee4d9LK2y1VZbpVys
UmiP1VdfPR3fk08+OezrBEEQBN1J6JAgCILeZIcddmhYh/z617+u67XFKswN
qUeHrLnmmulx4iLDIa9quummqysuYz7i3/72t4r33Xnnnek99QYund0YBEEQ
9A6hQ4IgCHoTPW/Z4uYB1sJskaxD/vSnP9X9+vrxes4RRxxR83E5L2vDDTes
+Th9faeffvpi3XXXrfsYquFz5ONTLxIEQRD0HqFDgiAIepP99tsv2eH65tbi
mmuuGdIh5TlOtTAH3XMOPfTQmo+TP+Vx2267bc3HqfHwuOOOO27Y95Z7NVzt
h5kllWYoBkEQBL1B6JAgCILeJPfL+vznP1/zcZdeeumI+mXpq+t5++67b83H
Lb300ulx6lVqYa6hx+k3XAs5YS+88ELx4IMP1szfko/m9VZZZZWarxcEQRB0
J6FDgiAIepPbbrttKM5ROsu8nOOPPz49ZsEFF2zo9ddbb730vDFjxtR83Oyz
z54eV2tu4b/9278Vk002WXocfVGL9957r5hiiimGnUky00wzhQ4JgiDoYUKH
BEEQ9Cbvv//+UI3Eu+++W/Vxu+22W3rMjjvu2NDrn3TSSel58q6qIXfKHEU1
7Y888kjVxz311FNDmunFF1+s+b50itebZJJJqs4kETOZaqqp0uvtuuuu9Xyc
IAiCoMsIHRIEQdC7LLXUUskWf+yxx6o+Ro9bdr0eU+XoNfXXv/61+Pvf/z7e
fWYIfu5znyvmnnvuqrUaH3744dAsxVo5VBdccMGQDnnjjTdqfiZzQtTe0yBe
v9b70mGVPlcQBEHQ/YQOCYIg6F3UWtAKeutWmgtoXod68znnnDPlRpWjBn3S
SSctNt100+K///u/x7t/tdVWSxrmrbfeqvj+V199ddICw81cHzt27JAOoTOG
w4x2j6v0mfztwgsvTK+12GKLpfnsQRAEQe8ROiQIgqB3YYPLm5pllllSblZp
3EJ84sQTT0z16Xfdddd4z2XPq3Fnz9MyH3zwwXiPkUNl3odeWKVzOjz3n//5
n4vFF1+8WGCBBYo///nPNY9TTljWIbVyyDLiO/oB//73v089vrIe8Xl/+ctf
phnyegA/99xzw75WEARB0J2EDgmCIOht/vCHP6Sa8hVWWKF47bXXUs26+X/6
ZKnlvuGGG6o+1yxEdRa0TLW4wv3331/MMcccxZFHHpnmdoir0CxiKHpl0QXD
sdNOOyWtI/ZCW9TDuHHjiiWXXDLFXLyH9zbbkO756le/mmpOgiAIgt4ldEgQ
BEHvIw5iPsdmm21WbLXVVsWWW26Z5nQMlwMlF0u9RqX6kFJoB32C119//WK7
7bYrtt5665QTVinXqxLPPPNMsfLKKxeHH3543Z8J9MdBBx1ULLPMMsUSSyxR
fOtb3yquuOKKut83CIIg6F5ChwRBEARBEARB0G5ChwRBEARBEARB0G5ChwRB
EARBEARB0G5ChwRBEARBEARB0G5ChwRBEARBEARB0G5ChwRBEARBEARB0G5C
hwRB8zFzrdYtCIIgCIJg0AkdEgSNY+aCGc9mLpgZ99e//rX4y1/+kmZKmzH9
0UcfFb/61a+GbmY4lP73J598kh7nOZ9++mmaOWcegnnVZsmVzsQOgiAImgdf
kHX2P/7jP9Iabu21jv/Lv/xLWsvdrMult/x3j/FYz/Fcr2E/CP9SEIyM0CFB
UBv7lf3GHkRn/O53vysef/zx4uabby7OPPPMYv/99y822GCDYqmllirmmWee
YsYZZyymnXbamrdpppmmmHXWWYuFF144zcDecccdi6OPPrq47LLLirvuuqt4
88030+xoOsWeZ68LbRI0G7aT88o5Tlc7z2jhUtuMRq5knzk3K90q2W+en7V2
qf3mPdlwcW4HrSKv384/56d19e233y4efPDBNIfz9NNPL4488shir732SrM5
11133WKdddYpll122TQ70/9bo/3NDM9tt9222GeffYqjjjqqOOuss4obb7yx
ePTRR4t33303vXb2K7mOnNtBENQmdEgQfBZ7B1vJfvKHP/wh7THnnXdescUW
WxSLL754Mf3006fb/PPPX6y55prFLrvsUpx44onFd77zneKOO+4onnzyyeLn
P/958f7771e9vfjii8X9999f3HTTTem1x44dW4wZMybte7PMMkvSKl/5yleK
VVZZJc2S9rhf/OIXSQex6dhw4X8LauH8cC5nny/bKOsI5xGb6be//W3x6quv
Fj/5yU/SuXvVVVcVF154YZqbzjbbd999i+23377YeOON0xxztthKK62Ubq6F
xRZbrFh00UXT/+cbmy0/xvnreeavs/MOO+yw4qSTTkrnvPcy//2xxx5L89xd
a2KEjs0xZr+zY896Jc75YDjoDueNc+j3v/998cADD6Rz2vnnfMzr6z/90z8V
iyyySNIdtMV+++1XHHvssenc9PhKt3POOac45phjir333rvYaqutirXXXrtY
cMEF037gNWebbbZirbXWSr6pSy65JPmrxL4diz0ldEkQjE/okCAokp3D7mGb
sYvYSjTGl770pRTfWH311ZP/64Ybbiiee+655FdrFXzD7733XnHfffelvW+n
nXYqFlhggWK66aZL8ZOdd965uOaaa5L/zXGw08KfPLhkrVGaH+g8/uCDD4on
nniiuP7669P5vOuuuyZNwL8777zzppjcBBNMUPE24YQTFhNNNFHxuc99rph4
4omLSSaZ5DO3ySabrOpt0kkn/cxjPd/reD2vW+093T/DDDOkc33llVcuNt98
8+LAAw8szj777OKWW25Jn8V18cc//jFpFZ/VZ865jKFRBhO/u3OArf/xxx8n
/87hhx9erLrqqsXMM8+czqnllluu2G233YoLLrggxUGsna6ZZuH933rrreJH
P/pROl/Ft5dccsmkT7785S8nrcNXZW9x/jp3m/n+QdDLhA4JBhX2Gx8xm+2e
e+4p9txzz2Sf2Tv4dI8//vjioYceSvqkG5BLcN1116U9bo455ii++MUvFqut
tlra98Rf7MP2w7DH+hPnq9836w2xA/7ep556KulSOlnMbumlly5mmmmmitqC
JqATJp988mLKKacsPv/5zxdTTz118uXSuc595xWf8XzzzZdsKfbchhtuWGy6
6abpttlmmyUtXO1GP+TH0j3OUcckViJv0bF5DzfvSQ85BsfimBybY3SstEn5
53CsfNByIQ8++ODiiiuuSDHL3/zmN+k7cR1ELmN/U6o96O0rr7wynW9yXWmP
jTbaKOXMWr89plOIhdx7773JDyBOIgYz11xzpfwveb1yfEOTBINO6JBgkLB/
iR/wp7Lf5Dzxv7K75J/YGz788MNOH+awiN/I/zrjjDOSf9v+xuemvkSNPO3E
Rxz0JuxntknOaedDFYdjcx9yyCFJF3z1q19N9nolnTHFFFMku56Nz9Z3ftAV
cqXkk8gbce7IjWInvfDCCylfkCZvh03kPVyDejY888wzyQ/gWNiOchTlcYlH
+oyOPesVn8lnE3fxWUvjK2IubDy5Y+IotNnLL7+cvjvfYc7ZD23Su1jTrG3W
aNcCTUx3WMOdN87lbvEbVcL1dfvttyefl3NV7q19R40Jn4JzNHK3gkEjdEgw
CLA9+Ejlw7PV+Wj5fvlUaY9W5lm1Azn+cpvZbfY2+ctyk32u8LV1P+yrXJPE
bn799ddTDiDbSjyCHV6uN8QNpppqqhRLyPkfdAYbXs8D9Uo//vGPU+1FN9tm
w8E207dBniLbU36+HDM6Zc4550yfnUbxXfhO5IKV6hNxF98hn4O65KxNcs5+
6PXuh36kW61p1jZxD/V56o3k6/Wi7W5dlkOm5l18W6yQj4FPwLrN1xQEg0Do
kKCfoT/YYGq81d2yW+Resdnl8/Yb9rbvf//7qa6YfSYX4NZbb01+OHt50B2U
6g65G2wpsQD5JPREqeZgV4sBfOELX0i/6eyzz16sscYayR5TP8QHLN+9F22x
ZsA3/vDDD6e6YHEQtcPqhWk335nvrlybiH9usskm6TuXs6+uIPemC/uvexC7
dn3IR1UzRFP63e68886+8q/Q2vwOtLVrXF8u67g8w376nEFQidAhQT+S9cdr
r72W6hPlpOtFdfXVVydbYxDgU9cDRq391772tZRDzQ8ceqT95B5sbF35F2pl
TznllJRLx+4ozS3i08+aQ2xLnpHaj3HjxqUaocgrGh46TwxFfTv/g++ZNvGd
+m59x77r0poT2k6sRQzJb+S3ih5HnYH+oA0vvvji1JvDdXDooYemOUz9ziuv
vFLsscceac9SVyVnK/RI0M+EDgn6DTpD/EMOvLVcToY+JoNqv7GpxH/s5d/4
xjfSvibHIfJRWkeuo1WDSvs9++yzadbAeuut95k+VfKr+Ov9TR3E17/+9dQr
V/4QeyR8883D+S5HTf8w3zG/hO/cd68+vjRmQpeowTn33HNTj+3c4yj6QLQW
trb4x+WXX576Qotd+w3EcwcNdX553dY3haamR2JNCPqN0CFBv8BG0H9Ef0T5
w/SHnJWwG/6B+QzHHXfc0Hcjl0Ve0KDqs2bje+Q/p/HELdRdq0GVR1WqO9i8
7Fz1tbkftNmVzt2gveR+RieccELKhZET57fxG/mt8u8md9+cILkzv/71r9Nv
HP2ym4eYk++UrV2qP2i/Qce6XapHxOti3Q76idAhQa9jPZZDYdafmWoLLbRQ
+nes05XhZ5OrxhfMthI7YlMFjcPHnns/y4MzA01NjhhHnokhB0gtuTkG6shp
QXlZYWN1H2Kpfhv5WWw+14jfzm+YewjTKOJa3/72t1O/bD5qz4v8rcbhI3L9
6F1IB9LmNGEne+12K/wU4njWEXMXf/aznyW/RxD0OqFDgl7GOsz+07+Rn1+f
9rDv6sPez2ZWu3/ppZcmeypsqeGhPZxjfOn69+hNtdRSSw3ZqfJ79JdVU2te
s3pyc8Mj3tF7mEnCp7H77run/kzqS+iQXFsiZrL88ssXJ598csq9k78VvVfr
Q36R/oV6XsmfNVNjEOo/Rot+Wnox2O/kelqHIsc26GVChwS9iFiHOL5+QepP
9RkyiyBoDN+j/CFaRD20XPiIjYwPu1LfA3s+fzltof9/ztsxs0P9M1+lXCs5
JfRx5AT2D2w9M3vkyKjjoTPpTboznwdyivjz9QYWIxMnibjs+NDxZsbon0HD
P/LII50+pJ7jtttuS33axVidl4PSfyXoP0KHBL2GWka5ROpIaRA9HcPeGx1y
tczi5mNTIyrPbdC/0zxzho/76aefLg4//PCUt55tTrP01DjrR6ZPstkWZjsH
gwGdec455yTdSX/K38pzJcXGzBflr9a3S6xR7HbQrylaTt8M/ZV9Z/LfxI+C
kcEvkntrnXbaaUn7hu4Neo3QIUEvYc/SV33uuedOOUURA2kebCSz79TqmrlN
mwxifol4kP1cvyr5NkssscRn4h60h+9IHom6WjolGGzkb6lh33TTTVONA02S
4yT+X1+Iiy66KM15GdTZoq6rn/70p6lPmTo+c1uC5mBGu/isfC36eBDPr6B3
CR0S9AJsZHlYfD4zzjhjsg+jf2Fr0NtUzrsev88///xAzBvhp1UbS3t997vf
TT7uXANAe7Ar2ZfqkPR9HcQ+okF98PeLjZlZwucvXy/33pLHteWWW6Y5fPog
yfXrd61v7aa9+DjMj9xxxx3j+mkB+rip9Zdj6/xybgVBLxA6JOh27NPWWHlD
4iD6bAatRf72zjvvnHrO3nzzzX2ZO8E+knclt0F+uvwG/ZHyPEH2o3wH+X+0
CbsxCBrh/fffLy644IKk651batzzjBLXltl86tvZ5f2o9+UI6c+gfzUNImYU
tA57pVxBvrpDDjkknVeDngsYdD+hQ4JuRsxDfoxaxm9+85vRT6WN2L/kktjT
zGQRj+qHPU3sg3/2l7/8ZXH22WcXSy65ZLIL2Yf67ao/dr65j/4NgtHiunnm
mWeKAw44IOXPmFFSWkuy5pprphw/sRR+7H7I8WcTu8ZWWWWVYrHFFkt6K2gP
egA4zzbffPOUM9gP51PQv4QOCboV/kEzm/gNt9tuu770yfcCjz76aNrT1Iyw
k3pVi8hPF/vweXbaaacU78j5+2o+9DwQExEbiX07aBV0hhjjt771rRRvcx7m
HEA5NfpxyY1U296ref78R3I61YHIcbRuBO3lrbfeGvLf+Xe/5/8FvUvokKAb
YTOauSCWz4cYtSCdRT9f8yH19lVD0StahJ6QY8YnqD/xiiuumOIeblNNNVWK
9aghvvLKKyNnPWg7b7/9dnHmmWemXghmk+jBlnux8WXffffdxccff9xTvbSt
1bT+HHPMUWyzzTZRp9BB5JLq57LwwgsXr776amiRoCsJHRJ0G/pbyiNmI5rD
0Cs2b7+jJ608d3kW8t67OWYg90oe2WuvvVYcddRRqR9xnjsn9qHOyPw087CD
oNM4X2kO/basezRyriMxY4OGNvNPTLib10Mx7Pvuu6/4yle+Uuy///4xX68L
cM6orTRrRG5c/CZBtxE6JOgmaBC9ZuzF+qsE3YW8JvGD5ZZbLuV+d5tNxA5y
jA8//HDKI8v+5cknnzzVCa+wwgrp/NIbKwi6Edr4iCOOSLNq1JGU5mydeuqp
qUZOfVO3+bblkOmpbp4Ojd/NfopBw7qoV4BzSL/k0CJBNxE6JOgW5B5cffXV
qdfltdde2+nDCaogb32NNdZIcwDee++9jmuR3PdKDrpaX/Ga0twrdtEOO+yQ
tEnYRkGvIJ+QZtY/W85Wnkcy3XTTFfvtt1/x0ksvpWuxG/QIDfKjH/0ozdU5
/vjjO74mBOMjX079m1iwngmhRYJuIXRI0A3Yx8xF16vommuu6fThBMMgnqD+
lI3UqZ5SbB05B3LEzjvvvGLBBRcc6j9k3gffnxno0WMt6GXYi+ZBmFHHRyO2
l/srqCF56qmnUm1Tp+xK9i0NYr6OHnNB92LNHDt2bKrdoUW6QcMGQeiQoNPk
3Gi9Y84666xOH05QJ2q/9WNRu97OmeL2UrWv9IcaX/ZPrv3gK1aTyR6SnxUE
/cQTTzyRar/F+HINifPefE214a7Ddvb0YMd6X/UgNH/EQbof58e2225bzD//
/Kl+Ln6zoNOEDgk6iTwZfhk9U8Xzg96CFmD377LLLimPpJXYL73Hu+++W5xy
yimpl1ruLaT2Qw29WJocrSDoZ958883ioIMOSjk2+v7SI+KAG2ywQXH//fen
Hlut7vnrevzZz35WzDPPPClPLHIeewd1mLQrP1LMSAo6TeiQoJOoybSP7bPP
PuGX6VFef/31pCOPOeaYlvQXzfpDftUJJ5wwFP+gP/Qz2GSTTdLcrsgxCAYN
fVlPOumktIbKRcx1Ueq37rrrrnR/I3qEllADX4+m0D/PfMItt9wyag16EDmt
aulWW2216FkedJTQIUGnkEOg95L+5jGjsLeRVyd33Xy2ZtkkWX+YsUDjeP3c
+0oO35gxY4onn3yyKe8VBL2MtVQvrfnmmy/pEbER14oZdj/84Q9TjmI9+Vp6
4IltyLmshfowcxiXXXbZsGF7GLFl+Vn77rtvipEEQScIHRJ0Arkzencsvvji
ba0tCFqHPstiFU8//fSoY1vqP371q18Vxx13XOoVxKaaYoop0utvvfXWqQ9+
EASfhSZQY8e2NCcnx0fUuD/44INpra3lJ9h7773TtWZ+UzXYq/wC+gqzY4Pe
5rnnnkvrqt5sMS846AShQ4J2Yx/87ne/m3Jqwp7sH2iPnXfeOc1dG86fWg36
VL6y+nO1uDn+YZ/U//6FF15o8lEHQf9hhucZZ5yR4iO5fsQcktxfq1q/3/XX
Xz9dczRLJTznxhtvTH0NIxbZP/hN1djpORD50UG7CR0StJvnn38+5dXwvwT9
hTyqpZdeuthuu+0ayrXjY/3oo4+Kiy++uJhrrrmSLTTppJMO5V85Z4IgaAz5
WGqqXFNZj7iudtpppzR/hF4ptTvN/nTt3XHHHRVfTy2YGSHnnHNOuz5C0Cbk
Zi200EJpHQ6CdhI6JGgn8gb06ODbDr9Lf6IXJN/aZZddNmztuBra3/3ud2l+
pT0wz0VQC8I3+8gjj7TnoIOgjxGf1Fd39tlnT/1+XWdTTjll6rml/koeJNSY
uO/oo48e7zXUhKy00kopphK9sfoPsegVVlgh9fSNnoNBOwkdErQLuaeHHXZY
yhVgewb9y7nnnpv66r7xxhsV75ebp7eoGlrxkzz/g37Ru0D/q9CpQdBc9Nk+
8MADi1lnnXVoHqKcR9frhx9+mHps+duaa675mevP9XriiSemvlyxdvcv+jDL
l+YXCq0ZtIvQIUG7kHtqzty9997b6UMJWow4iFkG66677md8a/Y2uelq2Tfe
eOPU18fNebHccssV3/ve96L/bhC0GP4BOVjyHsUfaY9FFlkk5crK2xIzKZ0D
qo6Pj6BavlbQP1xwwQVpLmX0IAjaReiQoB3IQ1a/vP/++3f6UII28d5776Va
cz0J6A+1I+bFyEPW+4rtI2d9gQUWSHUhrZg9EgRBdX7yk5+kGRLqznOvX3rD
/8urhHws/Xn1oAj6H34g8TD5d9HLN2gHoUOCVmNdO+2001Kfx1IfW9D/XHTR
RcUcc8yRevCefvrpQzNA6BCzD4888siUnxUEQWdga55//vkpP0sdu+vTbdFF
F011I3rXzTnnnMXvf//7Th9q0CbEy2jTW265JfJjg5YTOiRoNW+99VbKOZVz
EwwWaoLUPm6xxRZpvpqcD/bODjvsUPziF7/o9OEFwcAi/qh+/bHHHkv+gG98
4xvJP6C/72STTZb+fd1116XcLfUCwWChz9pXv/rVmO8VtJzQIUEr0Q9JHrI6
gfCrDCY//elPi2mnnTbF+ddaa61k9wRB0DnkSI4bNy7lytId8iP5B8Qul1xy
yTQrfcsttyw22WSTdM1GzfLgoa5PD0MzK6NmL2gloUOCVqLvqrm+etUHg4v4
hzz03B80CILOoR6L/ph++umT7tDT96GHHko9JDL8BWKYMWt2cKFV1Qvp7RwE
rSJ0SNAq5B3rwbrHHnt0+lCCDvPLX/4y5RvrCxoEQWcxI0Lsgx6RO1mOnK01
1lgjatMHHHGQ1VZbrdhll11S7+YgaAWhQ4JWceeddybbM+azBjjqqKPSDMuY
kRUEnUXOfy0f949+9KPUS1vPu2CwefLJJ1NOw6uvvtrpQwn6lNAhQSvgT9Pr
8dBDD+30oQRdwh/+8IdU8xr9CoKge7F26y1x8MEHd/pQgi7BrKdtttkmYiJB
SwgdErQC87DVJn/wwQedPpSgi8h9eWJWSBB0J+bM8n9HLCTI5JiIeetB0GxC
hwTNRo+s1Vdfvdhnn306fShBlyFHjz5l6wRB0F3ktXvPPffs9KEEXYa+aepE
onda0GxChwTDYW9yq5enn366mGqqqdLs7GD06Hc8XM/jXtob9C1Ye+21I8Yf
BF2GtXvKKacMv3cwHjnH4de//nWnDyXoM0KHBMNx//33Fw888EBdj2Uv77jj
jsWGG27Y4qMaPXKDrKn13j788MPid7/7XfHpp5+23O73fu+++27qM/Xaa6+l
2opS/vznP6e8iXfeeSfNifSYXuHll19OOrWXjjkI+p28dq+33nqdPpTxcGzW
QmtdpZv7rIVu+d/vv/9+Wq/1bQxGD7/RoosumuYbBkEzCR3SeqyhrmF2r/kJ
bEj9Sn7/+9+nPBX2rZt10419+atf/Wroxh71d4/x+N/+9rfpuR9//HF6nb/8
5S+pB5GYRStmBeofrr64HtubvawnvX4r3Y7+H+uvv36asbjiiiummU1u6us3
2GCDz9zyXK/tt9++OPPMM9Nz6ZFWQcd9/etfT/PFJphgguLSSy/9zP3mHK+8
8srFnHPOWUw00UTF3HPP3bJjaQX6OR9wwAGdPowgCP5/8tr94x//uNOHMh76
x5q5aL73bLPNVkw44YRpXTTzfb755kt9+KyXbvnf1scxY8YUN954Y5ob30sx
427lO9/5TjHvvPNGz8OgqYQOaS7WOv4X86D4YmgKMW4zoW677bbisssuK046
6aRiv/32S3Yte2y55ZZLN74GdrC19itf+Uq6ffnLXy7mmmuu9HeP8Xj+Kuur
XM199923OPXUU4trrrkmxS34mPmC+NOtvbQK3WPdGOk6TIOwdWmf4Tj//POL
+eefvyfmr9KFfGc0xcknn5z2Nbddd901fX9q7PONHnzxxReL448/vvjSl76U
5nudffbZ6bttBW+88UaaAWmPraRD2AyvvPJK6kfm/l7TIbfcckv6Hlup5YIg
qB9rt72n29du6554qnVvpZVWqpgzbL9Tg6bvl71LHqg1tRV+ukHCftepOVB+
O7Nu/Lb2DTYWPywbh63F3rFX89mW+nGr3TyOX9dzP/nkk/R6f/3rX5P9Vmmm
TtA6QoeMDra9c9e5nG1V/hezEvS6s65PPPHEQzZuvpllO9lkk6X1lM873/Sk
kINZevM393ks/4/nTTLJJOk1sl+o9DbDDDMUiy22WLHOOuskrXLssccW119/
ffHcc88ljSKu4tp13PXUfWy11VbpdS+44IKaj3Pt8kWdcsopzfp62wa9mL+/
cpu/HDNm/Qa++xNPPLGla9ZOO+1U85jsrb2oQ8QFZ5555qRHgiDoLPaBxRdf
vDjttNM6fSh1Mfvss6d1jy+vFvZlfjyPtSeyN4PRwU8nXt+K+JK8kb/97W8p
x8NvJfeDT5Dd8vrrrxcPPfRQsmXOOOOM4uijj04xdXvkZpttVqy55popl4HP
lg931llnHfLnVrotssgiKWa26aabFnvttVd6PTbOTTfdlHy6b775ZrIL6Bt6
h7307//+76FlW0DokMZhd/7pT39K2vull14qvv3tbxebb755ihfzvWR7llag
H+gCcQ1rJ3uRNnG9yAkyr/bAAw8cuh1++OHFcccd95mbv+2///7pehMHsQaY
dav/6cILL1zMM8886bW9x4wzzphi696XZinXQLPMMkuxyiqrpH4o/F9i8OrJ
+QbEO/gZyuuHf/KTnyS727HX8v/zU3lPeqzX8FvWq0OsQ/xsHjvppJOmz90q
rI+1jsn63Is6BGJ5roHIlwiCzsJ/1ktrt3xU6x4f2XCcc845Q2u7nNpgdDz6
6KPF5z//+bryI2pB+7I3+ETtv3IT5I1cffXVyZe59957p3xovk12C79rJX8u
O4t94vzNft1yX26lW7aR7OGVXtvfF1hggZS3Te9ceOGFqVafPuHLFT+hS4LR
EzqkfvhwnX80+WGHHZa0hGsgXw9ydegAekQ+Da1AW8ipfPDBB1N9Lv9MI72n
hoMNJ0fHa9MU1157bfJpuW622GKL4pvf/OZQTq38Ktefa69UL/lvOWHW9HPP
PTetBfYjvgh+CcdLu3isNb1anyOzIbxfL9KIDsHpp58+9Hg5Xa2in3WI88y+
Mdr9LAiC0WE/s8b3Co3oEHkAea2WxxWMDnl79pvLL7+87uew1/kw2T98nmx5
NaTsDfGV5ZdfPuV7lWuMySefPOkFvlX2ixjHHHPMkWpUFlxwweSLXW211ZJv
1rmw2267JZur3JdbfjvmmGPSXIGtt9465Y2oJ2In8ek6t/h0+Y/ZdI6hNO+E
BnOtyHm5++67k35iK4njBCMjdEht2Nxicm+//Xa67sTxsnZ2fqrhdl2o3bCW
0wHPPvtsiuF1C/QTf9fNN9+c6hvokyWWWCKtJa43n8G1VeoToFs22WSTpGnE
Q2gpmkuO2DPPPDNebFKMiO9AbKgXaVSH+Jz58a2cGd/POsS1JY733e9+t9OH
EgQDCz8TG6yeda9bGKkOEccORs8hhxyS/KyVYtlsAzUW7Cb7qnyLO++8M/XZ
YnvIj+P7LNUb/FG0hppBv63zcZlllkk2iFpafj/5WHzAXq8VdYVsGD7dX/zi
F8nmYe/5nPLrHXO2l/hys//Zjf1EB1155ZWpd5v4TjN9zYNA6JDKsJH4aR9/
/PHioIMOSjrcOSfPyXlHj8vFuvjii1Odc6/lljhefon77rsvxRvNdOBbsAbI
2+cHKM3p8jc5lf5Nw+jhVYrvgC7r1Rm8jegQ312u2xC7VS9SivVMDTz/iPWy
vLeI5/MP+Tu9yk9ULee0n3UI5BvquxA5t0HQGcTSrd29NBeiXh1iXTnvvPOG
9u5asWuPtRbbC+Q9+D7UKNSq28/P4Q9X8+y57NBqNYMen2usvbb4QM4v4C/0
32zhbp+tZL66OTNsJPuZvc7nZlPoy6PG4uCDD07xp9zz0U3+VM4bYU+wo/hw
7adqPr7//e+nmsduiy04B5wPeh+Ip9BgYie5Z0324bKTdt999/Q4tlCtvT34
P0KHfBbnjNqPn/70p8V2222Xrpsci3PduK7Y7dacfsN6Qs+Lm/ADiD1aJ1xr
/BelsUl5/aXI51x66aU7dOSjp14d4jsSUxaztXeLCdMcpTz11FPFHXfcUVxx
xRXFWWedlWK3pah7s07x71x00UWpf1q1Hvf9rkPkK9qnom9WEHQGvTbYgr1E
PTrEWs12FKe3VsujtrdXwhrO/rW3y+3hg1e7KX9H/L/S+kxrWH/1qlTjzO72
nCOOOKJ4+OGHk9Yoh59cbgE9pP5BXhDbnQ1/++23F2PHjk3vbw/pZtjlYgPy
P+RaiGnbq/gyfdd+G/YCu0G+lfwKeVTiBmwLj3/iiSfGm4vVS9CqeqD6zeSV
sQ/tZdlO0vfBtcVeCD1Sm9Ah/4e1hh2uziFreHlIbHHXmJhgt/c0bDa+D7lZ
ekvQ/NYVmr80vu36UhfCT9CrlOoQe5F9qfQmdmEP0xdZXw7fgZhxJR/iNtts
k76P3FtST4BS1LqtvvrqQ3upW7X9sd91iGtOnJsuC4KgvbDVreV8Ib1EXjv1
OmLvl9/Yt9ZqOoUfzeOqxerFpvnh7fPis7mnlvgEW8Dzv/e9742399Mn1nm2
aM7DYW/SJNNNN12yQb1GKfYS+RWOJ+cmiS14LNvc+4ixy1ft9t6xZl6q4c45
SuxvMRL5InSHvlX6makpVdte/l30E+JXtCf96nOzD7IPWy4N3SnfS71tMD6h
Q/5hR1u3xBLZc84d15N1Sc2HOqRBw3ci1synbx1mU6uDsa7rtVrqx7Du+774
N3qVUh2izs2aUnpTUydHNfc6Ux8yXA6omFElHZJ5/vnnB16HwPdkbw6CoL2w
ufmvn3766U4fSkNkHcL/zn4vv/GJ8Z3JX1ALXcv+E5OV77DWWmuNlw9Fe6gJ
5SvhkyuFL0l/l/Le4/ZONQXscrkF1bCP+AziJ2IqYIPIWaJDut1m9dn0saI5
2Aa+i2233Tb1vqWtBnXWIXvohhtuSPsaDZL1iHiJ3DM57VE/8lkGXYdYZ/SG
ktOnhxSfv3gjn7Z42qAi5siXkb8Pc0jU+1WCjc7/08s97Ep1CF+VnOLymxi9
dVa+nhiRfr21+hHYX2rpELGA0CFFij+ZldxrNVZB0Ov88Ic/TPXBvWYXZR1C
I6hxLL/Ji5UTy19PE8iBlQ9bnhujDoFeoRnokUrQCNk/VekYKvXguvXWW9N9
tE01xNNz/k7eO8VLcn/NbkduuliIeIfYUHl+8qBjP5OTrf6RDSXOlbWz3qbq
+IN/MMg6RNyTTzr7Jfj09W8zK3SQc/nsSTQIXcbHIWZdC/Z2rfW2F2ikTt3e
zc9h//bYavFm8yNr6RDfc+iQIs3gsUbHuhwE7UWvP7Z6r1FvnTrfNB1iL2P3
l/dXYSfm+s9qfjS9Mj1GL/5S+KXk4JT3iGR/qi/1HLUp1TB7z2P4QHuV+eef
v6H+vYOI84FNufbaa6e6UpqXfpNrozYo/G+Dq0PYgHIW83rGplQz1st1U83C
tSEOra5M7d5w8Af1Wn5xOY327eUjEytyu+qqqyrqVj2SQ4cMj+9BPC1qRIKg
vay44oqpx0iv0UjfXnEQuU4ezzddmi9kzpa/ez17QKWbvGy1HPbESli/1JnT
OHIrPF7OkteVt1SNrEPkjfUq8iTkBwTD4zy55JJLkjbNuVriefrV9Vo8stkM
og7JNUVqiZwL5uOoExv0cyHDv6+nRT2xYTEltfz3339/G46sdTSqQ5wruZcz
H0clX37okPrRd0x/+SAI2gP/v34sDzzwQKcPpWEa0SFQU53XWn1CMuZ1ZxtA
v6tqtzFjxqReWKX+JjndNI4cGzPt+DHlc/Nzy+HKfVyrkXXIjTfeOPIvosOo
HxUTGeT8kUahU/UN43vz+88111xpXkkv57WPlkHTIa4XuYx5FgZ/RcxRGzl6
QIgJ9PpM7EZ1COQz5OfI1SondEj90L0bbbRRpw8jCAYGsW4zNfjye41GdUie
IeImBpLJOmThhRdu6P3l0sgnNUOM1tC7tbR3ovvq1SH6bfUqevY6h7ppbnMv
QHPopaAHUPZlqrMdVF/4oOkQdpu6NL+9WK2+BsHI0WdQDVavMxIdomY9P6fS
ecS/X0uHyA8IHfIPrrvuuuQXilzZIGgP+jzpddSLNKpDLrvssqG11tyOjFhH
7q063NpT2reX5mBHyK/x2uVU0iHlvrp+0CHq/H0HfLtB4+if4NxTM6LfsRyU
bp9h2QoGSYfog5f9H3KJ6rU3g+qo1ev1GnWMJC9L3wuPV2NdaR2Wd11Lh8gl
Dh3yD+TIqiXt9l6VQdAvmI2hXqIXaUSH0A85L0vs/uqrrx66T06V9ZtPv1Zt
qDwKvv+MGSFeT1+bSvpFH+RyHULzlNIPOgTqSOVnBSNDbzf+AOeC/9c7adDy
3EaiQ8Tg2G18AmqzXL/N0nBex+vlmi8105XmkjaKteLiiy9Ov7U1R2x20H7r
ViAuXd7PsBdpRIc4l/Q4sKfxY5gDVmm+pX60Xs983EroQ5bfs1qvqEHRIfxq
rssXXnih04cSBAOB/lHyIXsR8yrq0SH2+J/97GepxjznX5X6fPiTzCK0juuX
W80mEMtYY401hu5fZZVV0uvtu+++FR8vPu411Z1kSmf/Qn/4ftAhzqNyjRU0
hnNAblbu62t2WzNwfv/ud79Ltro5nuYx2GubgWvB3E6vzVZns6uXMo+gURrR
Iewvn8U1pt+fNYyv1ywFdtlo9cKnn36aZuHpd7rrrrsm+22PPfZI/STU9oxm
ljk7M+fiLbXUUuF3bRK+y/K+hb1G3quyJjCHqRLOP+eomPtiiy2W7GZzDavF
pPWx9xh1D+X7Gy1v7aZlvCc9Uf4Y19v222+f7j/77LMr7pFmmGQ/Sq/nlopP
9/qeHAS9grkVvZQTwL5xoyNyjxk9eeW35vtKbx5npjrNYB0WQ6nUT4X/WU6o
PCt2RrlP1euYYVuae6tHFJ2h3rjc7uJTUi8iz2bqqadOfV88ZtVVV01ruH+z
BeUR+Az0T/4Mo7FxOgVb0O8QjA5zWMyLdk7ss88+o57Hwh5X/64Hk99o//33
T+elXHraYTQ50K4R14q+oewYtjqbXYxVfKfSrJ5a1KtDvKa6tnXWWafYYYcd
hvpw+670e9Az4dRTT606S2E42GX8x7SCz0LD+Z7YWew48U+5GyPBsdNMfl+/
80MPPTSi1wk+i++VhteDvRexF9Afr776asovy3149SK0f7mv9PbUU0+lmJr9
Sn8DfrRac4jtLUsvvXTy3f385z9Ps4vtUeY/3X777anfb55tdPLJJyd9k+Mi
rrVnn3026R3HZJ13P70C/jnH6HnuN/tG31vH2Sx/R7vhLzR7LAiC1mJv1ate
XlIvYK/5wQ9+kG7WCPM+9NKlpcSV832lN7Or3c+/oT+xHpnVYK8tscQSaZ01
C5x9IxdDHxa9VtlvpXYb7aL/qn2A3cWuY3t5Hl1hT+RDdZxXXnllWpvVC7Lf
HBtbUAzb/XLF+V/8vRfnBvh+zKENRgcNKr6X54uMpo8dDSIv3O9Ce+dzV77B
BhtskGaZmIszElyLzn/HygctxuLY2TfOe3qbRuD7r5d6dQj7aJlllknXdSWt
oc6UTeX/G8VncO3KD1f7W66j9PNgyy255JIjmnXm+XwT7D05mUFzcB64ZtjD
vYh8X/tTI7c111wzzZ3iG6vH3qcnnHN6OjrHr7322qQdcg4A/W4+lhxb+mbc
uHHpea7lSu+fc7zk41Y7xpHq9U7j2ucHCoKgtcinsB+++eabnT6UumBHma3b
yE0s+fDDD086oXRmSDXoCP13xU9oCP7jLbbYIumISnEKa7s6EY/nb5YXIt87
z0HiS+XT4kM96KCDUg6GmIdjE0+xj+Sb//Z3ftdeQ58nmjby3EcP2z3XivDL
1XPeluNcFb+bfPLJK2oZ56V+sWJ5I/FZssH5YOn1Slhbll9++VSTVW/MpV4d
cv7556fvhvathJyQ2WefPekFuSuN8NZbb6W6cX5d/txKmNnt/UfiLxV7zvXE
5pwGzUFcrlZtQ/B/iIHQPfwRpd/Xc889l85/8Y1B7h8Oe7lc4yAIWov4LB9S
M2ov+w0zsdhqYhP15knxBbsNIuL0zqXR5hEF/0DORc7XrjQPYDjE5tjT6kyq
acNsT4vBNYr+cMP1txCj1Eet3muiHh3iupQf4rjlsFSD78Bj+B8awdwfz/vi
F79Y9Xu79dZb02P4jRvJg/d6ZqR5rlhOaPbmISdJ3m0v5rQG3ceZZ56Z/CxB
ELQWdZj8ctEnOxgtuccLX1swesQo5Oz5TuVfNGpf2Uc9t1bvADE7jxETadQm
ltuhtqmW31Sc1etXiyuUU48O4a+ld4fzn+QaDPHQRpDv5Xnzzjtv1cfIR8t1
xK+//nrdr63uRO6858W85uZiLq18tyBoBuaJNjpPLAiCxuEHLe3lFAQjhd3M
Nqzlow4a46STTko2qzoRvaEaYbnllqvZbwe5L4966UZrusUb2NRqy6rljd15
552p9qnaPIJy6tEhN99881BeUy3/ib5WHifnvRH0qhhupqmamqxD1OjXizys
/LxHHnmkoeMKaqNGopZ2DIJGEEfth5mYQdDt2EMb3aeDoBpqEfRMDZoD33/u
YVNpTmY15C7lnlu1ZnTTB9kubnQGpdqT3JPae6hTL9UF6kPMcxA3qZd6dIj3
zXlTtTAfyONopUZiPXqfDqdD9KHI35vas3rJx6QGflDzN1uFWmu5bkHQDPT1
0Oc/CILWos5T35cgaAbq1HN9ftAc+AnYruIP9aKuKdvJtWpL6Ib8ODUPjWBW
iFrwbFfTG+pc1YWrqbK2qFNXP1wv9egQfXS954wzzljzcWbUexyt1EjN7frr
rz/sLLY8n9RND4p60Us4x5+iNqS56NmmFioImoF4pV6cQRC0Fn1n5G8EQTMw
b0EuTtA89I/MNdH1Io6S7eThdGGuhedPbpScCyNvzGv4/c3d0GtmzJgxSas0
Qj06xMxQ72V2UC1uuummoe+gkdiDflZ01XTTTVe1Bl3ueH5tMZ96MRfCc8y5
CJqLPLzyGbFBMFLMZ7E2BkHQWtSyrrzyyp0+jKBP0Ce1Ub96UBvzP7IPvd5+
EvpxZjvZHOVa5LwvM5JHgr69cpn0KsrvSY/ogdFoz9x6dMjOO+889B61yHUk
bnqH1YtctZybZXZbOWIr+mvn1zbXsF7UpnsOjRM0Fz2UV1pppU4fRtAniO2K
pUYPnyBoLWZd6CMZBM1gnnnmSfOsg+Zx+eWXD9m89c4Refzxx+vWIfrqepx5
643ieNjqe+21V1pH6NCsR+RNyZUxi6Be6tEh8qDqycsSq8nfQaNzQfUbVqNq
lo/n5hwqn1e+xrHHHjv02jvttFPdr6sXc85jM0MoaB4RDwmaiXiItSwIgtYS
8ZCgmbBDzYgPmkdpDlC98wZLdYj5krXIeVnWgkbQg5bmNDPZXGZ9hdWi8Enn
eeHsbX2D6+3FVY8O2W+//eqqU3dMuT5kJDa/+hJ1z/zs5izpkfXggw8WY8eO
Tf+dv18zT+vFnPn8vF6d+92t0LxmxQZBM+Bv0OMiCILWoj5k2WWX7fRhBH1C
1Ic0nzw7nG9OH6x6KM3LqlWnzs/PTm+0H5dcBb32ZplllvHqT/7yl7+kfsPz
zTdfOmZaZNy4cXW9bj06JOep6Qdcq9Y7x5H0cBtpTbheyfzsalIOPPDA4sor
r0wxkdzv2K3ez5ZfL9fSeK2gefg+F1100U4fRtAn6Ece+ZNB0HrYHksssUSn
DyPoE6zb1u+gebB/2a2N9LLXQzfri1p2slqHbE/fcsstdb++XCuas9aMRD2l
9MBwHPpm1aMF6tEheZa5160VHzr55JPT4+QKNhvaLtfsNDLXhX6jzzx3k002
iZ5ZTURfglb81sFgcvvttxezzjprpw8jCPqe6667LuaHBE2BjaXP4WOPPdbp
Q+kb2KnynNitjdRx6fM0zTTTpOfpn1uNDz74YEiHqDevF/lYnvPKK7U1g569
9Ipa+Hp659ajQ955552h2vpa/bjUrHhMI/NLMmrVP/roo+K//uu/Kt5/9NFH
p9dee+21G35t2s1z/T76KwfNIfzXQTPRPzDia0HQeuQrRw/JoBmoAWBfvf76
650+lL5BjtPUU0+dvlc9Xxth1VVXTc877rjjqj5GjXn26//zP/9z3a+dYw1q
RIZj9913T/lZ9dSI1KND6N2vfe1rw84kpxHkhOmbVY7vVb3Hxx9/PN59tIfc
L325Kp3Lf//734ull1465Y6rZ28U8yLliuUeZRETaQ76G/m9681dDIJa6OGz
yiqrdPowgqDvyT0hqvn9gqBe3n///WRbhY+3ecgN8J2qJW80zpTrSnbYYYeq
j8k5TpX8+uw58Qazw9Wgl2LGhuf5zYeDfqo3X6YeHQK1H+osjj/++Ip2vHiG
flpzzTVXRX2lplnOmJmI5XbrH//4x6GctnIN570eeOCBFI/ZbLPNxvte6oGO
yjEufR1++9vfNvwawfjkGfeN9GcLxufPf/5z6hH3m9/8JvW7ptkHEXHLRmYD
BUEwMuRNWLvtvcHIkG9ivWazmR/3xhtvDKRP7vnnn0/2crXZb0Fj+B7zbG/2
dKPfK/uWLW7+YaU6Cjb0HnvskXzzlWa+vPzyy8U666xTbLDBBuPNRBcnmHba
aZM/v5YPQ7xkvfXWq7sncL06hG2k5mSBBRZIx1aqRfTGUlsuR4deqYRcMd8r
PVHe09cx6/flMaU1/j6nPln6g9Ewjc5oLEUPM/EUx3D44YfHNdME/G58as7b
YOTI1RYP3HPPPVPf6jvuuKPTh9QRttpqq2L//ffv9GEEQd9jP2c76v8SjAz2
yGGHHZbWLfbJQgstlHLLB43I8WsuYpXsZL75U089dUSvoW+VvC41vKX1GXzy
ajvUvq+77roV7WCxglw7IrZSjvp5tWXiNOX5WTSOWnk9teQ21OvnqFeH4NVX
X02vLe/LZ3Ed/uIXvyjuuuuulLdlpnu1eIVrlbb75je/WbGnr89+yCGHJG1N
c7k9+uijxRZbbJG0IX/DaPD9q1P32+r79fDDD0d+VhOYeeaZo1/fKLHWqK2y
lrv2Tz/99La+v+uxG2YHLrPMMhXXvSAImo/1plZvz6A28pDMGmCX5VkMjfTQ
aQaN5Pa3igsvvDD69zcJ/gFxhDw3nE0/EtQy6DlrT5VPJHagzltdCFt89dVX
r+rXFyPR28lscc8tR4zFLA91KGYGvvTSS8Wbb76Z9IFZ6uZqfOtb32rIZm9E
h+CTTz5JdpPZhmIuBxxwQLHjjjsmW7SWLSP35J577qnqL6DLzG2Rl2FOodw2
/9ZfsJ6amHoQW5ltttnSb7zwwgsnDRWMDuf5eeed1+nD6Auc853QIfoNuD47
CZ9A9KAPgvbBdrzooos6fRg9D7vHbLV26xA+X3OaO81BBx1UjBkzptOH0fPI
/9Grha9cnoma8NHgvDRbkj1NG+j1pIfUOeecUzNOYS82D1FcptZj7r///hST
oJt22223ZK9vtNFGqQajUXuiUR1Sijr4VuRDiiPV0+trJJh5Ib/NmuH7078s
GDm0NW0cjB4x/k7oELmgo403jha+Bj7F4foBBkHQHNgNbMhg9Kg7bbcOUZPb
DTNg+L7lugcjh12v74/8EueR39Xv2yz4+c3hawU0gP17NPGC0eiQXoRGZDfr
V5Z7CtRT+x9URh5iI/2tg+occcQRbdchfGrymjutQ6zBk002WV09/oIgGD3H
HntssdZaa3X6MPqCTugQ8+I6rUPYz/J31AMEI8f+q8bIOTTTTDMV9913X6cP
qa0Mmg6B/DZ+/KxF1KDI2eqGHPle4wc/+EG6bqL/4+jphA6RI6oPXqd1iDil
HhhBELQHvUFnmWWWEfWgDD5Lu3UIW0Vf1E7rEPUMcojUCASNQ8ep25CT4PyR
q3PWWWd1+rDaziDqEMhf22abbYovfOEL6fdXP8+/0KrYVb/iGpLPOAh9QsQ2
1X+1qr9Bs3QIu8JxDqcNnetjx45N79lpHaJPVuQYB0H7MM/L/KdOzH2wNpX3
6mFby8eu5g/093rWtfLniLHKcfn000/r9jXmY8lrvf+v9d7N0CHyW9Sdy92v
FRd2bHoEe89O6xA2k/6v9dhNPlOl+XGDin3a75h79LJF7YOD6NMdVB0C14U6
Gz2DnQdzzjlnmsFojkP00qoP14x+zfoitwN7gf4C+k3qF6y/mmOwNvvd9IVg
U7vPPlvam83v7W+517v+DuU9pCu9n5iB133xxRdTrzrvab+pVhslz8/rq3V4
4YUX0nwV55PeF97b+1bKBaymQ2hmx1B+K99T7bP6zDm+n/70pynXyfdQPt/F
9+D5N95441BMUM2ZY8s3/SjaCT/ASHsUBkHQONYv/ld9KtoBX5W1ie3qPdXC
Is84lpPgPnOH/XfWKew1czqsbWpnPca6NtwaZY6CNVhvzNtuuy31wLB+W7sr
6RFrvTXe+3uOx9Mi1kvv7bkPPvhgxXlZ1XSIz/Haa6+l/cDN65Q/xu/gcfk4
1RbLM7B3lPfD8lzfgXw676d/qlhE6a1SP9JWoY+Qnj/D4bfUW0wMZxBnrJRD
t9mjzaTwO+qxa453O3+7bmKQdQhcEyeccELqKcw3JEd9n332SesRuy4YHmui
vsvtwOzEXXfdNcUxZ5999rSP2o+s79ZE9SrWOjWY+hCMGzcurYEeQyuZw+l+
fgc9qNXX0S+VsAd5jr5wbmaJspW97rbbbpt62lXqp+Axcv2sz3pjOi77jL5i
4g964ulbUb7HVNMh3sdcEfWAG2+8cfr8XqfUn2iP1zvFrE/nr54VPqvfxmcs
1T32N/0zllxyyXTOe0+fR5+/fNOLu13Y563DjzzySNveMwiCIvXv1EenHeiH
qddnniW2xhprpDiFNdqarHfXBRdckGY8qzm07tELNIf5ZGYsWYOt3Ysuumha
66vVxrLX9RvS+4Nt/5Of/CT1BF922WVTTrb+peVaxBpqX/HaeV3Ux0ZvY31B
rbvmOliny6mmQzzPPDm9ydZcc820L5gBl6F9HJs+Q+4z74FG89mWXnrp9NhS
vaXXkWO0h+Q8Hs8tvbWzRkVOCV9uLdhRPhN/pb5igzqnN8Pe4O/O5ww/+N57
7z3QuTiDrkPAV212nDUq52nNO++8ya7jo6k0kzL4P6yZ/NntwJr20EMPJdue
ZvRb8V/ZG2iRjLWOnT3NNNOk+z3erdQX4/f1fDZ9pfgXf4WahXJ/oXVkpZVW
Sr0tKtnO4hD2LueT16dL7J38WHRUnlHkc5RSTYeIxdA09hyvaX+lj3Jet33K
OibXu7y+zXs6Tv0Ysq623zpGtzzbU654/pvbSPuWjwTfs7hM6P4gaC98FSuv
vHJb3suazEame6w5NMlVV12V9EfpusxnM8UUU6T6ZxrEXLLSWQfWan4mWqFa
n2/rnXwX620pYulf+cpXUhyh3F4XV7e2m1uW+/DSMNmHL2/fe1pnyzVMNR1i
/bVP+Szmo3ntrCt8jnvvvTfpMn6mcl/4tddem3Ke7B95reezob2s195vscUW
G+pVlG/tqnN1THPPPXeaw1sJ36fv3z5rD7J/DXJfLb+NXAh+PjaAc0kOjmtw
0GNEoUP+D7Ff2t61pXbXdW6GvF4QYqqDruMz/PDyPO0N4sB8WPRbu3sdiWH5
jdjgbPVyxDDcbz/iSytHHq61wPpYKa6xxx57DK315euE+Lz76IJq6/6ZZ56Z
HsO/d/nll6e/iYHwQXpeeU1GNR1iLReD0WOzPI/Me/tsnieuVwk+ObqH37Gc
rLs7WR/i85pDEwRBe5GPaf1rp6/NnmHNESdgl1byAS2++OJDa3eltd2e7H72
eznWxJxvWqmn/MEHH5zuO+6446oeo/hFfv8ct5YPJoZebzyEf5s/Su6NnKty
+HrmmWeetAZX+ozs+EUWWSTNXS7P4+WHyv1dOwV7qVKPE+eS74FPbNNNN039
2H0/9iHxn0HDZ/YdmQ3i9/S7+U3ZAJX25EEkdMhnsYZ9//vfT7bjrLPOOjQn
1TljbihfsetvkK4nfho5sfxUcnr4oNi85tPTAmLEriu+nnai36zfxvpWiauv
vjrdz+dfrQ7EcXtMpZxfe+SMM86YYmPlMVO/v3ODjqmmv5wvXltuVuncIH7/
SnOEynUIf5MYD/+hPKtKekfegHi3niV6BlRCfkPWQ+V0WoewQeSOyZ8IgqC9
yIuyBqh9aBdq+6w5fCPiHZWwVuVelpUQo3a/uHQ51kk5TWzfSvnCt9xyS3qu
/KZq8D96jBlw9VCuQ2gX+6Sc/2pzq0877bT0HNqmGuLoHnPJJZd85u/doEPs
r3Kj875kLVePIz5CH4ppObf4mHzng9aPlN9a/I3WkJPnfGcziIGYA86ODP5B
6JDK0PR82NYIcVx2nutefNH8eLVk6s/Yr+V9P3oZn0VdtNwdOWnyaOWsssnt
DTm31028mY3NTvc9iZ+3k6xD5FpWwnG7nw+iGrlHQXn8Hmx8sYa77747/Tf/
FA0hFiR+n3Oaqs3CzDqk0l5ZiVId4nd48sknky9NzWI17E+eI4/A71bp5rPl
x5TTaR1iv3YMlfyFQRC0HnUa7Vy7sw6xf1SzTTfccMP0GDHlSuR4tLhFJeS/
6MPB32PdprfEH2gCfmnPrRWDzTpEP/F6KNUh+o+pBVxhhRVq9kGhITzHLGrP
qXRTH5IfU0o36BCxDjkDGTkD2d+fdab/plfEwPjJ7J2tmlHdDfAd6o/g8/Id
yj1kO/JXfvnLX045kLfeeutA9sSqReiQ2rA71dexweWUTj/99On6clPPxj7n
9xAnEFt1nfWCLuG7oLWsk+xUe4M6CvXJ1lC5Tuxnvva8rrC76TDxD+u/eIjc
J3byGWecUXzta19r6/WVdYjcgkpkHVIr/znrEHl3lfA95XXF3uez0qDymuXu
1rLhsw5RA14PWYeYLyaGIQanvkX9RDW222679Bx+KXqp0k1uAK3odyvf9zut
Qxyfa2qQa/SCoJNY7+VBtWvtzjqkkl8kk3WImr5KZB1Sy8ckTm1dlx/ER69O
3T6lTt1z7VfVyDqk3j6QWYeoF1RTb9+kEar5qHzXagQ8R28Rx1fpJp6jNrC8
rqLTOoTtIFegtD7H3sJOyj7bnEvCVhIDUEMvFy7XItpz7K3qJnp5hg1d5XM4
1/QcOPDAA9N+7LP7LtQT0aTqZMp70wT/IHRIfdD61hjrAfvQdZX94W5iJtZO
NUe55554gtgbn4zcpnb3ArbWWS/4gvjv6Q3HxKaWQ8VPIedHDHWppZb6jOaw
dsixdQ2p1eY7Yk+r1WP3l/ec53+S41QtN6gVZB3CZq9E1iF8EtXIOkRsqxy5
V9ZLdexyh+gu8Qe64M033xzKQR5Oh6hLq4esQ6zX9kq5St7DGlatp1fer+2D
NGStm5rIcqrpkHbtC/xpeoAFQdAZrN32smr5Q80m6xBrbzXyupbr6srJOsQe
UAmxD/sbu5gfigZRM85PyPdRrw4Rk66HrEP01KLr5GOxQfnzKuXt8rvYY3N9
o37GtW7s3FKq6ZA856TVsIX0OCzvnczeyf1Z2AM0lBoYmiX77dzMPparZG/1
G7PffU77qloYr+s76sb5CewqeQZiX/qq0lU+h3no+TPat31usUb1szE3pTah
QxqHXc8nvv322yf73flmTc217W5qS6x/1iP9jeQO6ZfuvLXu0wPWff4SuV1e
03plDal1c22K0dDVzm3rk9dwTYjH0OTew5rL7rQWy/ORZyrXVoxDTUf2WWTN
zu9Oc/Cb843JB5IbK7bouIer0bdeWBOrxdFbQSt1CN8O29135fe11jQaS8g6
xHdfD1mHWJ/9rrQvjSimq7ayUm9xOYKeo7fCSKj2GdRkthrnu1h1tby6IAha
j3VNL452rd2t1iFsWP1m5H3Zw8pzo7INX6pDytfWkeoQOTfgp/vGN76RbIIb
brhhPL+O75wd7zmV6t6Ho5oOYR+U92FsBfxH+shXgu1BZ7DF1YXYR+U363Hm
O9E7TH53qR+XJvM337sYv/pT8SB1S/ym9Ak/Kn8cW4l/tdXxO7+Z79P5lGeC
yVP33dOafIX80aX5Iuw+1xK7Tx7CINURj4bQIaOD38V1Jt6ot4a1je3qOuQP
yH3Icz4se9F5qj+669J6KfYqziDXxzpW62ZNE6uWN+o96XBrgj7e1m7XsffI
vvrS69z7W/v4Jqyb1nDrwrrrrptsZXbzPffckzTSSHI4rTXiJu2K77dSh/Dr
sJFpNK9TifJ4SPncxJHqEL1gMrSqz8nPIgZeroX0vPQcsazh8gEr5SpX0yH6
MLe6rpAPzHHbV4Ig6BzWbrXd7egf2modwnfmPnH8Sr3A2YflOiTXAGZGqkNK
7U7+O3YA/5767XL4yj3H3l0L+2l5PISPsZIOYadXq+1vFjSAvbHavgi+V3lZ
bKLSPZHv1LrPjufHZS/IrWOzyPm2H+V8Ljc6jm+UT5dPzl4qt45/1XdA8/C7
2r/1dGG78Mfyy/LP+t7se7REvuXaG98V+83j7LOey0ec5wA7TvaW3HPH6pzw
e+Zjc5xyC/kp2VEewzYrnR8Q1EfokObBbmOLipXohSFGq0erWgo9CuUM0gBs
LxqFLijVKSO9sZXZqV5TD0bXivfid1DD4hoRB8kz7uw5avj4vJsZL7TWOoZ2
1Rq0Uofk+m8+mkq6ylqc41/58+qBUfrZm6FDQOc6Z/heyr9ba27+DNV6z4BG
oV3L49y5Tz5/UylywVodE1d7KdctCILOYv3jVylfB1pBq3UIPeW+arMq1HuW
6xDx/1KaoUPAHlcHssEGG4yXw2S+OBuAHVttHiPYtVdcccVn/qavh/crn2Uu
L1qMvJXIy7Yf1ZpnL3/C52Lf1OrFRieKd8g34Ivdc889Uw40m8Vv63tlM8nX
8F3lXLZ8c87y+8pLkQ/GvytOY04wH69e9+a/5FnEbua4uOnpzIfrcWwjz2Uv
ybEvzSHLmsMx0F/sKrPJ6Eg+ZPtzpX6bQf2EDmkttAnNrR7DXCLrkmtA3I4N
5tyXV0iryIfiG6h1E0vhA3Gdeh6/tdkSfCBe03UnD4stq7ch25RPoB0xitwv
UZ11O+DvskZUq1Pny3B/rTp1NdIeU+6vMpvR3+nHSrUSYt/WJY/J/g/1M6X9
4+UkN1IfomeNx4uLlUIPWCvdJ2Zdvv6rI7FGW8Mr1Xt7/hNPPFGxXj736S/t
V0WztHq2mZopMWz7TxAEncUaYU+p1Oe22eT5IWzZar4OPXU9Rm1vJXLfXr1j
yrFHVst34puX48qutLZ7f+tdua/Kd+E1Ks2pLcdrWMs8vlxP8FflvljmEZbG
ZxwLm5sf0V5VKRbFnre+l8+n5e9kK/M5luYueFylWVnNwh7Pxq8n5pL7Epf2
1KoH36dYhT2LVmMz8Z/SCvypfhu/MT3A3yqOYh+3H/OD+l5ov9K4ynA3PkWa
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
UfIP1VPTFQTNJnRI0AloD/WnbM2f/exnnT6cYJTYy84+++ykLYfzs6oPEu+Q
b1UNdpJaZbk+iyyySJo1wp7SP5R/V54Jf2/4zGvDx+l722677ao+xneY40/q
PEZL6JD24zf86KOPUv3HYYcdlvqB5Bk94mHbbLNNmoveDJ+P99JXwLUec0d7
G+eDnml6EPANBkEnCB0SdAp+2HXXXTflHJfn6AS9A5+oPvM0wtVXXz3s4+VZ
iXfUoyHsk2rbzTKQD6K2hH3FH6uXEq0S9SPVWWaZZdL3Jd+tFnl2nXr20TJS
HeK3VjOm11rMtKwP35n6Kn5sfp1c/2EG4cILL5z0p7y7ZsQt6Jzci9nvo7+d
vmhvvfXWqF876AwvvPBCsdRSS6Uar4htBZ0idEjQSX7+85+nnFR+28hL7T3Y
QXqsLLroosWxxx7bshw7e6R+z1tuuWXy7+b4CL8vXcMO++CDDyLHrwy5Vr4n
v00t2CIe14zYRKM6hA1kvukzzzyTbGa9m++6664Um4kcvMq4HvRIptEPOOCA
YuaZZx6q/3At6jmnJ3KzbEuzXOgcNX05d8/1Roe4Jv076C30rNQzm56MnjFB
JwkdEnQafT/ZlieccEKqlwt6AzEIv50+V+Ibuf9VK2EPsVP5eeVr5foRdph+
pGwvtfIeFxSpL5LvR1/WWvAFeBybcrQ0qkP06zrjjDNSvp3evw8++GDqEat3
j7/x9wf/QM8q9uMPfvCDNGcu9981B0SOqzxG31+z5++oSaf5XW+XXXZZ8d57
76Xr3yxMGla8LfxIvYPfz7VOh8T1FXSa0CFBN6DmUR7BeeedF1qkB2CD6Glk
H9tkk01SLk074eeV784WY3/l+obpppsu+YLZs2Jt6lYGFbGhz33uc+l7Ofnk
k2s+doUVVkiPM1tytDSiQ2677bakY+nHcvQZnmSSSZIf/m9/+9uoj6uX0etM
P7mbbrop5bHKu/Id0yG+vz322CPFj1qZn6iXmToCNe96KsuJpD3EIvUAFnMb
bgZJ0HnE0fbcc890zUdf7KAbCB0SdAv6sKgxsN9Ffnh3Y+bA6quvnmYQ1qo3
bzXsLrW58vq+/vWvF//0T/80VJ/Lz64f7MsvvzyU1z5I8J3n+YD16pD1119/
1O/biA55++23U8+8SujpPeussyYtIgY2aDi39ap+/vnn07zPVVddtZh44omL
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
cgTVdLO7xY46PTtlOPR8oDX8v3pV9rI6APMExEuefvrpis+jHzzPd+C5lWDz
6GvFvtbHgO/fjT3EpnWfW6X6DnNn5I74ruklOlSN8zHHHJNqjPSo6Fafbu5j
q5eU89Xnp91zD6lc+6Kee/fddy9uuOGGjs34o5Hkhl1yySUp1y1fb/IlxT7U
MvsN6L96cN57vuc1gufJsXOe+M6iF+LokffnGhS35D9ybQdBLxE6JOhF2C/b
brtt6gdk/+TX7XafabfCPmST8pezHfUPbVeeutiHflr84mIkU0899VBd8iab
bFJcddVVqUajU1rT98A21j9anopcFDXtWZOoxfd3s1PYz2wAcYVunJXIDj3y
yCOTJtBXWQ2M/x+uhlWcw3dQ7TPJqZObM9yt2jnl+xLf1D9LLMp1TaN6z27T
dnSxmia+Z/mEYj6umaw9Jp988qSr/U3OoZqQTvUbth7SFWx/eYe0pBiGc1df
O/rS8dN/ehU0An1KJ6pnbxT1CvI0fUfy8pw/jb5/UCR9Lq7mN9SbTF5lr/dy
CAaT0CFBr8I2lctjP9xxxx1TDlHUjdQPu5I9wa8vL8pMDftaJ+BblgsiF8ee
KuaQbSb+en5cfvzSvKJ2wwYVx7HfZ02ixiX3BKOdxJLk5Mg1YvezA7vNn+93
79YYouPqJg3nWMQSxLzY8+KFYoV6W+XfXT1M7mO7ww47JF1Nu3VKQ8l3on30
sDI3gubIGkm/gvXWWy/pvtH2QRYHGmluou9VfEj8yLWkRp5Pott0ZzdCX/p9
5bjqxyu+pAYvCHqV0CFBr8OXL0+Gf49/V+5xJ/rO9BL6gtq72E1ytvn7O1En
Xgn562rD6Q99QfOsDzXzZ5xxRsrF41PtpM1CW7BLxUH0A3JsZgbmfBd1JWpF
+ffF62hkcR01MtHvrbuhhcQ85KrpmSaWoDYo11LkfCY2Pd0pJ1/NPbu+k+ek
mAL9QwO7rqebbrp0rPqXqYsXb2Lvd1OvBbE4uYHm+vDrW8vDl1QdeWxii3qg
5xgInRwEvUzokKAfEI/W90fdiHwevjZ2QdRCfhZ7vJiH/By6jb3SqRjIcMjX
EQdhA5r3zZ/LrtLTymw1+STiDZ32odIVYjXqcOUUyTfhH899t9z0SFKjzOZy
brK3+NjpqdAlncO5o/+F3lH8+84p55yYh3hX7lOg3lzsSy2F35HNrNZbbn6n
oT/kqd54441pVoSaeMeszxgfg15Vjz/+eFfFmUrxG4jd0PP8+/p9iyX6XYJ/
oK7Ib0gT077bbbddzEYP+obQIUE/oYeW2li2oNpQvsHQI//oBSWnXR9Oc8Xk
Zqht7IW8bPlQP/zhD9PeS4/kXHy2vXiDfK5u6ZHPpuKT5h9Xb89mVfeijiTb
tGI7agjoK3qKLnnooYdSvETdc7/NdO8mrAPiftYE8Q72rxoHPS/ocn2C828k
5jHffPOlv6v/FYszG65TteblyGV0rt10001phkc+v+Q0yhE7+uijU2y4V5Dj
Je+NFsm5Y3oG90pfulZg3eYnEvfwvfid1SX1wrodBPUSOiToN9iCalzlRouP
iGHrx6r/0qDla4nj28foD3avnioXXnhh8fHHH3f60BpGH1E9dtT/6seU9Qib
nj0vxtBt/XfYvHKy5AuKlTgfxXP4qnN9AZtXzo/f5qCDDkp9qdi7Yiz6A9NY
tXqoBpWRRy8HSe4Pe1wenRiGHMRtttkm1W1POeWUQzErPRKcS0sttVTS6mqp
xRjY+t0US3AsdJTZJOIfOU4oXqPewudz3vQq6kTkO/L768elfo1m7Bb912rs
X2LB4h3WDfUf1gb9Q3px3Q6C4QgdEvQr7BC2qfxt/kH2q9nN8i86We/cavh8
5Zmwf/WjsY/xpdnHuiVuMBp8PnPt9CZQL5ztMLlQ+r3KX+jGHHP2hfrS2267
LR2nmia6xGcQL8m6yo1fXs0JPzyNRZvox0VTyueSD8TG7ib7uJOIIcmT9/3S
HK57tR1yfPgh9NVTv5P7nOV4h766+lzQHXokqDFn/3Vj3yHrmboVn4uOyvMi
xT/Y7Hp21Nt3txfwWX0mMUV6i76iJf29H3MZ+RroSz4I/arV71u7+2XdDoJq
hA4J+h22Wu7FpC8U2+7MM89MuTD9tKfRVmwwPl854WwvcXx1C92Qx95s5KXI
q1F/K18r14iLN/h9n3vuua7rVVWK8zL3NWIvq0ng9+SPV5/PTs52c/bXq08w
e8Hva6ai31pNA38xfcKX7Dxg03S6bqbZuE7pS7X+7DX9XukNOXv0A81Nm+pv
YGZgniFIc7DZ9Y1ynsizcl2o8dAXWi1CN+qOUvSVoL3lj+Xe1vpH07F6OljH
+hWxAb+v897sE/2mxalc3+zzXu7Xbg2Qiyln1rkohu/83WqrrVK+Zjf6U4Kg
2YQOCQYFdpkcfD42+cd5T7PeP/nkkyl/o5fybn0eNqf+UmwU+etyf8wGZNN2
W2+cVuE3+8EPfjBUP8L+ZHvqJ6NX1auvvtozv6vcEzmFaqXVtKvdlWsjh4jv
Xpwk29fZxmaP6ofETttvv/1STov4Cb+53jriQ2KA8hLFydh1zhsxhG6IpziP
5Us6V9mVrkP9pF2rbE29kvV2u/7661N+oXwp8QDnuRhYjoeVao5ZZpklxZnE
QfmVzcZRbyCvT013r9TgyOvz+dW8ybvKvbpoqZNOOinVww0K6kSsaeJb4j/i
ieIGrn3+F/GwXtAkrjnXoHNbbt1hhx2Weqa7zu1HdPWg5Q8Hg03okGAQYYfZ
A+Rs2dP02OJjNqudj5UdxBfVbT5lPuE8w5ltRlPJN5N3lefpqe3shf242YiP
3HnnnWkGOvtULGHiiSdOmlMtr9hDr30vbBZ2udideQFytGhNGlovBnUyahrU
m+Q65XxTf6KWf8EFF0w2u1x7Npz5Js4bGo1dx+7Js8zpcXUpYg10gBiLWgPf
nePIN/E1cYnym3iM++kdMQs3+ocW9Jpe23uwreUN0s9qt/iC5cL7fHzCYpb5
M/otcw5S6WcTF5DPpn+uHsnsOFpM7wKa3Ody/L2iOUoRzxKnkYukVt5nVsvi
c9KntNSgYk32+cUQ6XTrtziYuJBzSWzwnXfeSWt8N1zvrmH+BdeCc18MU+wu
a2mxj0svvbRj8y6DoNOEDgkGGXsaO4uNZy+zL8jZoE/4XtkyYub8jnyTbN12
Hpu8IvYdm5AtyifMjrSHsbvktas1kFM8yH1lSjH/wRxr302e4caGo9d8T/1Q
68nGYtvTopdddlnqjSQ/zWd2DrNXF1pooaRRaBF2fGmOV+lNPEH8QD6b3l7i
SM4tOoBdb9a9a4M+yDeanT1cfhOPcT+9Iz7lRv/Qgl7TnAjaibagIaaffvqK
x+Vv6mXc7zekNcR8xDccF63Jd+wa1fctxzPbeX22AnYze5Uu03M3z6IR25GT
JbbVbb6RTiJu4Ld3HrDn5TRZG8XMaFExQffrNcB/oxdwK7UJzSGuR4/TwLQ9
fxeN5Jpx3vIZuVbVffAZ9fo5GwSjJXRIEPwD+xNNwq6RB0GPqLFgh8klt9fJ
4VIvrJaVNqBP6AR7jz2xURtBzTW7mW2sxpTvWLye5uDbZ2PynbHrxDscD384
X6CazUHIuxopemepoZBDL5eFTacvlR78fM296CcfDnUOzkm2F9+wmMeJJ56Y
egjLY6EH2EHqpNi5dId4iZwv343cnxlmmCF9X+ZQsIGr6Zd6b2JSNIX4hbwy
ddXey3vSF3QJ3eSY8nxox8ruprn11dWr1PnOnuzXHhPyiqwt7Gi1Trm/s9gQ
f0jYq7WhAdj+1miaWH9AsRI17vLyaHXrAV1Qmq/onBK/U4PD12Q95v+pdHOf
2IY1X02O9ZqWoDf8dvYOcT3nLT1OxzsGcRuxPrEQcY/QkkHwf4QOCYLKsOns
MXJ65CGzD9QRs+XYBrQBfUIn2HvEVPRC4qO2z7mpj2c/5Rt/vL/LR5HX7LX1
peQvs3fxJ5stKE8s51rJMzGj0T5n7+uGXINegp3BP6rGItey88v7vejOQfk+
2T7OaX5h3wkt5lxkl/ku2Pvy+pzr7Dh2lHORJpC/Th/Uc3POOn/zjZ961113
TfELtphcI+ezGhZ2m+uFrmdD/n/svQncVPP7///4fOxbsqWQJWQrqbTvGyUK
oewpu5AtZStREZKiRbZsZassyRZRKdFCUpZQIpS02Zf3//+8vr/3fKa5z8w9
933PzJnl9Xw85hH3nDnnPTNnznm/3td1vS7GxlyvkGD9gu+ib9++FiPyfmms
7aMjC+3zSBWsM5ALiC5Bi6NrWVvycWTidMQlOM+5jnPek6/I9Zg8qaAHnh+c
v8SgeQ1xc2J+6AzidOyb3wr7ZDt0Bzlk+eKFIkQ6kA4RIjmYx7HGzpyB+wtz
KdbYuL+x7sW9jftQu3btTKvwL/ck7nf+4f/OtqwHk2/BvZG5GvM07l3Mz5gf
UqOivhGpge+OegTmDHgpscbPWj+xLj7rfF1jTxXE7eKtEcc+VGObPOSSUZOG
LvY5csSG0Gus0YvUwvWUeCHxC2qj0N59+vSxnETidfjUoaO5Jgc9eA5d3q1b
N/Nf5PpPfhXrT8QgWSfKFU8MIbIF6RAhyg7zNOay3IdYg6MOl9rfeA/mHtTg
st5MLrHIDKyR0uscLeh7ZzP3IJecPDu+RyHSDXqNuTCxTvLfyMGqUqWKXQ/4
u/J2Mgu5gVwLqCHjGhFPY2tdSIjUIx0iRGZhvYx8fe/7Q86yaswzC/k/rDnX
rFnTfHCJjxCjoqYCT00h0gH6gjp08q2Ihfq+MMRRiYNqnhsOeF/zXZAbK4TI
LNIhQmQWakN8LzIeO+ywg81LVHOeWZgTkpNFvhx+UXwX+N8yF5GPjUg1rKfj
P0FuIHVKrEHgaYaPEtpEhAO/c9+Thx4zQojMIh0iROag3xb+o9G918gP2mmn
ncwDK5/7Imcr5NPRfx3/KF/HjscNOd94GAlRVqj1YK3hoIMOivzmqTd49tln
s6KXZCGDV6G/FtOnXQiRWaRDhMgM1B9Ql8A6KPWO/t6H9xb9FFiTw4MLP0l8
IZUjnlnoE0Pduo+N4F+Lh9H8+fM1VxSlgjwr6j3wVcK7mPw/vJLJCVT+X3aA
T5u/FlO7J4TILNIhQqQXPOnp0Y6nKRoEP96PPvrI+ipw77vnnnsifctYj2ee
Qv8SfF1EZiE3jpr1I4880nQh9cNox8mTJ8s/VZQIdAb9NKPrQPB25VzSGkP2
gJ+61yGsFQkhMot0iBDphXyratWq2Xoo8xD85IFe0dz78K2HmTNnWt9q8raq
Vq1qfQxFODA3of+Zr1+ln9x9991nvSaFSAT9aOh1jx8stV+cP3hF4/OqvMvs
gx6ZXoesXLky7OEIUXBIhwiRXlhPp4de9+7drW+eh17S3PvIxfLQe4E+F/j6
krcswoPPv3///q5u3bqRnuD4nKEX1ZdMBIHnK71KybsklkaPmsaNG1tcROdM
dsI6ke/dou9IiMwjHSJEepk1a5b5MsV6cjZt2tTuf/Q6FNkL+f3MK/3aNn3m
6EG+Zs2asIcmsgjysO6//36LffhadGq/8F4T2Qv9Y30fISFE5pEOESIcOnfu
bPe/evXqhT0UUQz0vb700kstP4vvjFp2PLbU81rA4sWLLQ+LnoScH8Q66bW9
atWqsIcmiuHEE0+074y4lRAi80iHCBEO1KJz/6tUqVLYQxFJQP/JkSNHmm7E
b8D7m7HeTU2AKDz++usvN2PGDHfqqaeaFxa5Pc2aNTP/V3ms5QbEN7kO8x0K
ITKPdIgQ4TBs2DC7/zGfVR/l3IE8rY4dO0Z6UbZu3dq9+OKL8tMqMNauXWv9
P/C54zyoUKGC+Uzg8yxyB9aB+P569eoV9lCEKEikQ4QIB/ywvE+L8ntyi2+/
/dZq1itWrGjf37777utGjx5tPRFF/kMtCH7b/vuvUqWK69evn1u/fn3YQxMl
gPUf30t9+PDhYQ9HiIJEOkSIcPjggw8iOoT+IiK3IP4xYMAAd+ihh9p3uOOO
O1rvkeXLl4c9NJFGPv/8c9e7d2+rBSEXi14zaNA///wz7KGJEvLFF19ErsGT
Jk0KezhCFCTSIUKEww8//GDentwDH3vssbCHI0oBdSHjx493jRo1spoR+lBe
eeWVbtGiRWEPTaQB+tzhv813jSfvUUcdpR7cOQwey16H0PNFCJF5pEOECAfq
WL2/zq233hr2cEQZwJuZmhG+T7Qlfq3Tp09XrXKeQD06Mcvjjjsu0huduuZP
Pvkk7KGJMnDvvfdGavTWrVsX9nCEKEikQ4QID5/Tc84554Q9FFFGli1b5rp1
6+bKly8f8WOePHmyeqPlOPik4UNQu3Zt+153220383Amnilym549e9p3utde
e4U9FCEKFukQIcKDHobcB8nrEbkP/SKuuuoq6y/C93rQQQe5p556Sn5oOQrf
27hx4yK9CfEjuOmmm7R2nicce+yx9r02b9487KEIUbBIhwgRHldffbXdB/Hd
UQ+K/IC5Kz0Oq1atat9t5cqV3cMPPywvpRwDHwK+N9bKvaYkj0f16PkD3ynf
7bnnnhv2UIQoWKRDhAgPfHa4D+K7s2bNmrCHI1IEmvKRRx7ZJJcHX1D1184N
+J7QHHxvfH9HHHGEGzt2rPv333/DHppIEeTbbbvttvb94nMnhAgH6RAhwuPN
N9+M+LXg4yvyi1deecX6NVO7Tg07fgSqK8hufvzxRzdw4EC3/fbb2+8SX17q
Q0R+sXTp0si1l36UQohwkA4RIjzoNeG9e/F/FfkHvq5NmjSxmBfrr/S7+/77
78MelggADXLLLbdEfM8aNmzopkyZEvawRBpAW3od8vHHH4c9HCEKFukQIcKD
XHM8QLkX9u/fP+zhiDTx7rvvWq8J32PkxhtvdCtXrgx7WCIKNAi/wa233to0
Y8uWLd0777wT9rBEmiDmxXUXzSkfCSHCQzpEiHDxNQSdO3cOeygijXz00UfW
f4JeBfTAu/76690333wT9rDE/w+akDgVGgStePTRR7u5c+eGPSyRRk4//XS7
7lavXj3soQhR0EiHCBEu9A7hfnjIIYeEPRSRZj777DPXoUMHt/nmm9sDj99v
v/027GEVNNSk33DDDaYNvQZZuHBh2MMSaebwww+36y79KIUQ4SEdIkS4DBky
xO6HrMXiFSrym0WLFlnfAnQIc99rr71W9SIhsXbtWsvP8XEQcufmz58f9rBE
miEPi3wsrrsDBgwIezhCFDTSIUKEy+uvvx6pl5w3b17YwxEZYPHixa5jx44R
LdK3b1+3evXqsIdVUKD577nnHvPFoia9devW0iAFAr8/f82dNGlS2MMRoqCR
DhEiXFasWGFrsdwT6VEgCoNPP/3UHX/88aZFttlmG/P0lRbJDGiQESNGuJ12
2sk0SLNmzeSbXUDgTej7Nn3++edhD0eIgkY6RIhw+fvvv12FChXsvkh/dVE4
MAdq27atzYXRIoMHD3br1q0Le1h5DTk5Y8aMcTvvvLP95ho0aGB+ZqJw4Drr
+4viWSiECA/pECHCp1WrVnZfxCtUFBb4MjVv3ty0SPny5a2Pt3xE0wOa/8kn
n3S77767/d5q1Kjhpk6dGvawRIZp0aKFff/k4gkhwkU6RIjwoVaZ++Kuu+7q
fvvtt7CHIzIM6/H0zPPnwOOPP+7++uuvsIeVV/z777/WU3L//feP+NM999xz
YQ9LZBiur/zGOAe47gohwkU6RIjweeaZZyJ1k9RQisLjrbfeivSS2Xfffd3E
iRPdP//8E/aw8obZs2e7OnXq2OeLFnnsscfCHpIIgega9aeffjrs4QhR8EiH
CBE+S5cujdSqa35UuLz00ku2Ts95cPDBBytnKEV88skn5snL51qpUiU3atQo
i4+IwoNYo2rUhcgepEOECB9ycCpWrGj3x8svvzzs4YgQefTRR90ee+xh50L9
+vXdggW6PpcF/OjOPPNM+zx32GEHd/PNNyvnrYC54oor7FzAG0Q16kKEj3SI
ENlBu3bt7P7YqFGjsIciQoRa6kGDBkX8nE488UT39ddfhz2snATvsd69e1us
kT4t559/vvzIChhiYPXq1bPf1THHHBP2cIQQTjpEiGzhxhtvtPsjPQ3Wr18f
9nBEiOCXhbfotttuaz5axMhWrVoV9rByCta6R44caZ8hOTidOnVy3333XdjD
EiHy008/2fnAdRatL4QIH+kQIbKDKVOmROon1c9A/Pzzz5ZP5Nfyb7vtNvn5
Jgnr3vTJ9vltTZo0kf+DsHorf4195513wh6OEMJJhwiRLbDevd1229k9kjmn
EF988YX1+uacIE/rqaeekodWErz//vuuWrVq9rkddNBB5kUmBLVBvk5o7dq1
YQ9HCOGkQ4TIJo488ki7T7Zv3z7soYgs4e2333aHHnpopOfFnDlzwh5SVrNs
2TJ33HHHRXqxPPTQQ2EPSWQJ3jOtQYMGYQ9FCPH/kA4RInvwXi70e/7ll1/C
Ho7IEvAa9X5qzLG/+eabsIeUlWzcuNFdc801VlOzzTbbWJ86eSIJ4Hrq+xdS
eyWEyA6kQ4TIHiZMmBDJX84Xv1b8n5g3L1myxH355Zfu999/T+n+mXuyX/ZP
HXJJ+kKsXr3affbZZ+7TTz913377rY21OL7//vuEvq/ke6xZsybpMSQDuVjk
lPi69V69esnLIAY+I2If22+/vdWln3baaVaXnC44jznnyAGbP3++++GHH1K2
b7QTvS3Y9wcffGDnaDK1QfRJoa4oCM5tfiepPjdzBeKI/tr6wgsvhD0cIcT/
QzpEiOyB+fpWW21l98rhw4eHPZwy8/HHH7tx48ZZb0b+pTcGc0VqRMvaw4F5
IHWnY8eOtX0/+eST7pFHHnFPPPGE9YVMxI8//mh1zPfdd5/V4txyyy2uT58+
bsyYMTbvS6RH8DUbMWKEe/nll81PgDkompH/fu6559ztt9/uFi1aVKb3FgS6
4/TTT7c5NnqEsapW5H9Mnz7d+tDz28Gblbl7upg7d657+OGH3QMPPGDnHP9y
Lk2cOLHM+hBtwzl9xx13uH79+rnrr7/eXXLJJe7uu+92M2bMcH/88Ufg6/g9
cX7079/f+oS/+uqr9jvjc+Fc5Xy57rrr3FdffVWm8eUqAwYMiNSGpFIzCiHK
hnSIENkDa/mHH3643S87dOgQ9nDKBHOmrl27mufsiy++aJqEemHW8nlvzNlL
O48mx+LBBx90J510kukINMBHH33kxo8fb3OxCy+8MK4/0sqVK93gwYNdz549
7V/mkczRzj33XLf33nu7Y4891uZx8fJ58FXefPPNrWajVatW7oQTTrAeH/w3
9RtnnHGGHSMdELfxNUTMufmMhbO5dZs2bexz2WuvvawvfbrgHD755JPdVVdd
ZfN8vmu0w5AhQ1zz5s3dsGHDSu1rxjlMv5Mrr7zSNDv6gd/JZZdd5vbcc0/b
Pzl6QVqEY/r1fnL4atSoYT5hTZs2dYcddpg74IADbN+//fZbWT+CnKRFixbq
zyREFiIdIkR2wfyG++Vuu+2Wsz3XmBfi88S9P3btkflSt27dXNWqVS3vpDSg
E+iHjI6I1TLonQMPPNA0UOzaNGvGrBczr4tdF+azZu0ZjbHPPvu4V155JfDY
5cuXN+8q8qP8vI+8c2pfyTtPd+0GcRzmpByXutvly5en9XjZDvNqfjO+JoR1
75Lk5pUE+knyPXNux+Y/cUzff/L5558v8b45Vzln2Qe5htHwm7nhhhssFsZ3
T6wjFrbB4xktzZo/cdVy5cqZ/sD34p577imy30KB/Es+C34zffv2DXs4Qogo
pEOEyC6YY+S6xz33esb/7LPPBj6/cOFCt/XWW7vOnTuXOCZCfnvNmjVd5cqV
4+bCoye22GKLIvNBjotGIZcq3r69NxXrpkFeAegQ8mUuuOACd/bZZ7vzzjvP
3Xrrre71119Pee1LEHxeAwcOjNSKUItdqGvcQC7UjjvuaN8ZcYp450Qq4Hvm
OORNBUG+n9ekJZ3z0z8Ibc45GgRz6f3228+OT1wkNiaCDkF/kM9JjiHxPvKw
yBmjbqSQie7NhP+cECJ7kA4RIrtgHkXuD/dM1kBzDcZPzhC995g7BcHa8f77
72/9UuiRURKIBzD/pj92PJhr8Pkdc8wxm+gc4iesJ7N+Ts1uEMRKeC3HoFYk
FnQIcRXeAzoljBoN1s6pw2aMrPPSV6QQIR+qVq1a9n2Re0ReU7rYsGGD6QSO
RVwkHsRKiFtMmzatRPu/6KKLLJZBTCTe/ulryfGJ2cXWv6BDiKGKovgY8y67
7CJ/ByGyDOkQIbIPn+vOumq6ckzSxZtvvhnxHk6Ef4/U95aEs846y15HnUk8
8L4Kqkm99NJLI+ui8fpKUIPut6EWORavQ8KG+hdqABgnMZx46+j5Cnl05Pfx
/vlOqKdIJ/gtofvId0r0/aMjGBNz35JArZM/74jxBOHjjDwmT568yXPSIcHw
XXmtyrqEECK7kA4RIvvAc4n7JvGCFStWhD2cEuF9aehnnQhymtiOuvKSQF4V
r8NPKB7krJCXxXZvvPFG5O/oiipVqti6djzvTmrW/Vzv/vvvL/J8tugQoC7f
x85YK8/VeqKSgjbnu0ETEHu4+OKL4/pIpQqvT4vT1+REsR1xkZIwcuRI86io
X79+YBwOonUINezRSIcEQ9zIexCWdM1DCJF+pEOEyD6oX/Dz6Hi56NlK9+7d
k/Kl8T0b8X9KFvx0/ZwiSCNE4+fn9957b+Rv9JMYPXq06ZF4nkbUmvu8LLyR
YkGH4KVFPIJa9tdee838wMjDyXRvBsZBjIe5OJ9LofQOx4uAvD5//tBDPd1Q
h8Px0MGJ8GsIeB2UBPrOPPPMM3Y+xYuB+pgJ9fjx8rLIFfReveyLGinOz0Lt
fUm9DJ8Z9Wj0ZBFCZBfSIUJkH6y34wHL/RNf2FwCD1vGjVdWIvy8jnrzZGG9
368H47ebCN9/vCQ1Nszl6tSpY687+OCDA2ue0SH4whI3QeOgh4YOHWp5ONSv
Zzo/Cr8s1tD9mJmj5zPUf/t8LGrC43khpBp8CXwOXCLo88F21O2kEvIL+a2w
77Zt2xaJyXHuor3p1cP5yNo/5+Zdd91lnxf+2fH8GfIZPOX4zMjNUr8dIbIP
6RAhshNfW8lcK519oVNN69atbdz000gEnlZsh9dRspCj5nUI861EeG9b5l/J
QnyDGmDGRNwkCGpd0TZ4mfl+h6xf81rq8/EAy3SvONa7OU94v9TPUFOdr9Cn
kngAMSD6bGQqR+7UU0+1z7d69eoJt6N/iK8lT+XY/Lo+cRZqsGLBq414CL7U
sX082X6PPfawNY1ENfb5xvfffx/xUqP/qBAi+5AOESI7YZ7LXIt7KPPMXKFh
w4Y2ZvRIIpgXsN3222+f9L7p4+d1CP3cEuHXjnv06JHUvletWmVjZjzkjAV5
9gL6kHEEgecRx7zmmmsyuvbKsZiTc76Qf1KcRstVyEXCF8vnY2Wydur4449P
Sod4vcAjVX7KnG/EutDW9AEJytviHLjpppvi5gZ6fwd6Geaa90VpIc+N98zv
gl6nQojsQzpEiOyEPAs/l6ZHRa7gc4RatmyZcDt6G3gvzWShJsPP8Yqrm/Hx
EObnxcFaMn3Z8de65JJLEsaf4vVZB/Sif0+ZjomQ/09fFe9hm2+58PweqEfn
/ZF/RJ/xTOJ1SHF5WegEP/dNRTyEc/Hcc891lSpVMm+GROdfItCmPr763Xff
lXlcuYD3OcYPubQ97oUQ6UU6RIjs5ZxzzrH7KP3LcsX3Hv2RjF+Qrw/hvSUL
9cjF+e568DViO2o2EsE6Mv03qD8mdhLb/70k0JMkkedvuhk3blykbzT5aKWd
s2Yj1OQQq+K9MS/PtGcZ/Vo49kEHHZRwO+oxShrniwcxOereOSb/lqVP5nvv
vRc5N0vT7z3XQL+Ri5Zr6zhCFBrSIUJkL6yv49vEA++bXICe1tz769Wrl3A7
+j2z3RFHHJH0vtFim222mb0OH9VEUE/OdtQNx4P8FD5jtBPxmXh9F4FakJkz
Z1q+XDyPWHJi/FwvmThMqmFc0T01oj2Lcxn6lDdt2tTeF57LYfQH9+cra+uJ
8D3X99prrzIdD80xatQoOzf5N5GmpHaf85gapXjnJp+ZPzeJ/eU79GDxcanX
X3897OEIIeIgHSJE9oKXJ/MZ7qfML3MB8s+T8Tf1ORPt27dPet/oBr/GyXwv
HszhvO/x008/HXe7GTNmWG8z5mWx9SB89sx/PfhQUT9CnCderjmv8XO9Cy+8
MOn3lUrIXfOetsxhqXvJZfjOiTH42hfm5GGAN5rvjZmo9sf7UVMnVVrQvMS2
2rVrZ35gsfUc9OmM/l7Rm+SLkZc3b968wH1G5zTecsstpR5broBfhI+35rNv
gxC5jnSIENmN78dBvUMu+GYxb/K+pYnqYb2vFr5ZJeG4444rtv7c+2oRO1my
ZEngNnPnznXnn3++GzJkSGC+y6uvvmqxD8+DDz6YsL9h9HF54FsUFsSA0GHM
3alXyGXwQSYG4f1qWfsPA/qp83kSm0zUL7JLly421ssuu6xUx+E3Q+8P8sAm
TJgQ+BviXIz24OVc45h85+SvBTF79uzIuZnu3vNhw/qB94+j3ksIkb1IhwiR
3ZCP5X2zciGvm3pp6rQZczzdxNyK/Bp0QpAHKbEJai2CclF8X+uOHTvGHQNx
Dt9PI0hj4LtEng09rL33bizUV0TrEOaEaEH8WxcsCL5mkrfl54NTp06NO750
Q98Tn8dE//h4WizbwW+qa9eukfrqoL6SmYI1deo0GEuiHjF169a1cz9ID/C9
oB+C+tJ4+D2gYRJ55HXo0GETH4QHHnjAxkZPS2IlQeB37H2y4/m95QvEQH1O
VpjnjBCieKRDhMhumP/QM4D76umnnx72cJLC51xNmTIl8Hl6GNADgtqQ2Hwo
6o9ZwydWwdwpFvr2kZtF7lG8tXHf03rAgAFFnkMn0ZMOH1N0BjlWsQ80RI0a
NTbxFeK4zZs3T1ib0LdvXzsuGiDsXBDmwb5GhjXhTNd1pwLqHbbddlt7D3hl
hd2HbtCgQRYPiVebRDyMz/zwww8vEjNBe3Ne0ueT/QS9F3Kq6LuD7zO/naAH
XrTkGkVrdHQ1ujyeDxZam2sHnyPeF2F/junG951PdI0QQmQH0iFCZD/er5Qe
4StXrgx7OMXCXJ6eftSsx/YzYP5ELpbv/RwL2/veY/SUDwIPLOan5JfE5q3g
qUVPdPpLxPZsI6ee+nE0EP3eyQ0LeuA9jN9WbKyE/gxopKAeDR988IHFX6iL
Yf4cNugOn9PHZ51r/ROYx/vcPeaT1DeEDecW5wa1H7G+zNSHc34QtwnKe+K8
J07I+9l5552L1JOjJfAG5rymziPeAw2CRo6G3wC9NemjHnt94Dwgjsq40MfU
OeUzfEf+c+7Vq1fYwxFCFIN0iBDZz/Tp091WW21l91ZyMLId5kWsGTdq1Mhq
wJn70NuY/CD8dhs0aGDzpiBPf3JWeB2ai/7PQeCtSx04a8f44hCrIB8Fb1L6
DKIxXnjhhSKvI7eKWoMKFSoU+zjqqKOKvJ71ZuqQ77zzTqsfYf2aPBt6WXTq
1Mk1btzY/HqzpU/cokWLIrE0PstcWhsmFkZPch7Mr7MFajeoHydmQTwN/YAG
HT16tMXLqAEP6l+IHuAcIX+KmEhsziH192jYAw44oNgH/TJj4dxkTPzeOB/f
fvttN23aNNsvdTUcuxBylHw/e9YaomtohBDZiXSIENkPcxbW+Lm/NmnSJK43
ZzZBLIF1WOZGaA/mRvzLGiVaKl6/csD/h/pxasnjQS0q25ALRf8P8lWIVXA8
dFsQ5LXQCy6ZR7w+eay3UhfMfBMfJ2rCqTWhnoTc/mzRIJ6BAwdanvyWW25p
OiwXYE7tezLi/5yoniIM0J+cd/fdd5+de2PGjDHfZzyuEv020YX03wyKSRBD
4/eRzIM6pCD43NDIjI0cMB7UjPA7ybe+lkFQC+b7qLImEK/2SwiRPUiHCJEb
+D7NzCcTzc+zDeok8BrCwx99UJY+gUEQC2HtF+3C51KWXm/JwvyG2A7ryzw+
+uijrO3XTByqevXqdu4Qh4r2Is5W0IHUYeDTyzw/G0FvkvfHmjv6IpGuzjTk
Zn344YdWT5/rvs0lgeuM9+sOy99ZCFEypEOEyA2Y83gvyjB65IncBZ9h8puY
2+MRls1Qd+H7n7Rp0yZr9Z3IPnzvFupv8KMQQmQ/0iFC5A6nnHJKpDdXUK20
EEGQ10RtNecOXk7ESLIV8pt8v8BsqPcXuQEe4V6/4pclhMgNpEOEyB3oKeB7
qY0fPz7s4YgcgnoX8pw4d7Kp7jsaahjwZPZ19UH9Y4QI4sknn7Rzm7jf5MmT
wx6OECJJpEOEyB3Wr1/vDjvsMJun4QkV5MsjRBCcK94Hlx6S2Za3Qr3F1Vdf
Hem1F91DUohEUBOGVxnnTlBPIiFE9iIdIkRuQQ2vr1eP5wslRBB4zvq+gEE9
HsOEun+8mhlbly5d5HUkkobeON7XHD8PIUTuIB0iRG5Bvbqfr5199tlZ5xMr
shc8ZY8++uhIjRFeY9kA57CvMabn4qxZs8Ieksgh6BHv+7zS014IkTtIhwiR
e5x33nl238U/a+nSpWEPR+QQxETo8cb5Q8+7bIBegPSvZ0ynnXaa++eff8Ie
ksgRWJfZbbfd7Nw599xzwx6OEKKESIcIkXuwXuznkvSpEyJZyKWnvzbnDr29
6X0XNr1797bxlCtXLm6PPiGCGDRokJ07eDDo3BEi95AOESL3wEeoVatWdv89
9NBDC6pXmSg7+OH6fPphw4aFOhbWsytXrmxj6dSpk+pCRNLQExUtzbmDB4P8
1YTIPaRDhMhNJk2aZLXqeFWOGTMm7OGIHIKYSLNmzSL9RFavXh3aWKiXZxzb
bbedmzZtWmjjELnH6NGj7dyhh/rzzz8f9nCEEKVAOkSI3IQ+0743Xc2aNdXX
UJSIZ599NtJjfezYsaGMgX6KBx54oJ3D5Ir99ddfoYxD5B7r1q1ztWvXtnOn
fv368uoVIkeRDhEid3n88cfdZpttZr0N6eMlRLJs2LAhMo9r0KCB27hxY8bH
MGrUqIgHNT06hUiWiRMnRnq6PvTQQ2EPRwhRSqRDhMhd1q5d66pXr25zucaN
G2tNUJQIn9dCXGTKlCkZPTa6p1atWhEdRHxPiGTgOtemTRs7dw4++GDVxwmR
w0iHCJHbDB061NYEyZGePHly2MMROQR1vlWqVLH5XIcOHTKaF4XuIZYXZl6Y
yE3wnvY+C4MHDw57OEKIMiAdIkRug+/qYYcdFvGMWb9+fdhDEjnE9ddfH6kT
nzdvXkaOid7p2LGjHZf6kJ9++ikjxxW5D3E0HwupWrWq++abb8IekhCiDEiH
CJH7jBgxwnKlya+h/liIZFm8eLHbeeedbV7Xo0ePjBxzwYIFpns4Zr9+/TJy
TJEfUEdE7Jc42l133RX2cIQQZUQ6RIjch/zoGjVqROpEqBsRIhn+/fdf16VL
Fzt39thjj4ysL19xxRV2vF133dV6qQuRDNSFEPP1PTjxWxNC5DbSIULkBw8+
+KDl2/N44oknwh6OyCGmTp1qnlXM7+699960Hos8Qt+38IwzzkjrsUR+4WMh
nDuKhQiRH0iHCJEf/PzzzxH/oXr16innXiTNb7/9Zp5V/tzh/9OF9+hC97z5
5ptpO47IL+gX0rJly0hdyLfffhv2kIQQKUA6RIj84eGHH7YaEWpFRo4cGfZw
RA7xwAMPRDx8p0+fnpZj0Mc9U3pH5Bd4qnFuEu8dNmxY2MMRQqQI6RAh8gdi
Ik2bNrV53iGHHOK+/PLLsIckcoSVK1e6SpUq2bnTvXv3tBzj3XffjeR/ERcR
Ihk4N4844gg7b+rUqaNYrxB5hHSIEPnFSy+95Lbffnu7Z/fu3dvqkIVIhvPO
O8/Om4oVK1odR6q54IILIvtnbilEMtx+++3mj0XPkPHjx4c9HCFECpEOESK/
+OOPP9zJJ58cme/Nnz8/7CGJHIF8LF8HTJ5WKsHbaM8997R9n3POOSndt8hf
iOnut99+kf5I9A8RQuQP0iFC5B+zZs1yu+yyi927u3btann5QhQH50nt2rXt
vGnevLn7+++/U7ZvapfYLzpn2rRpKduvyF/++ecf16tXLztviPFOmTIl7CEJ
IVKMdIgQ+Qf370suucTu3+XKlXOTJ08Oe0giR8APlfNmm222cYsWLUrJPjkf
vdcRef6qTxfJQHyuQoUKdt6cfvrpFusVQuQX0iFC5CdLliyxWnXu4U2aNJHP
pUiKpUuXuh133NHOm5tvvjkl+6RXoe+fPnDgwJTsU+Q39GJt3769nTP77LOP
8kuFyFOkQ4TIX8aMGWO1ndR49u/fXzXrolg4R9q1a2fzv+rVq7tff/21zPsc
PHiw7Q8tsnjx4hSMUuQ75PGRw4cH+aBBg8IejhAiTUiHCJG/rF+/PrKmSI3w
vHnzwh6SyAEef/xxO2fo1TBjxowy7YtcmiOPPNL216JFC8vREiIRy5cvd4cf
fridM3Xr1jWPAyFEfiIdIkR+Q03wrrvuavf00047zf3yyy9hD0lkOT/88EMk
L//SSy8t077Qvt6DSz1DRHHgjdCnTx+L4RI/e/rpp8MekhAijUiHCJHfcF/v
2bNnJC/mscceC3tIIgfo0qWLnTN4pm7YsKHU+7n++uttP+XLl3fLli1L4QhF
PjJ16lS322672TnTuXPnlOQFCiGyF+kQIfKfL774ItKPmJz/VPkgifxl0qRJ
dr6wLs3csDTgi3XYYYfZfsgPVH2SSAS9LVu1amXny4EHHujmzp0b9pCEEGlG
OkSIwoA+xHj4+p4i6gcmErFmzRq3++672/ly8cUXl2of7733ntt8881tH4rD
iURQN9SvXz+rS996663dyJEjwx6SECIDSIcIURjQo+6CCy6wOeG2227rxo4d
G/aQRJZDXgznS5UqVUqlW3v37m2vp6cma91CxIPeqxUrVrTzpUOHDuaxIYTI
f6RDhCgcPv3000ieTLVq1ayvgxDxeOaZZ+xcYY2annIlAd3rz7WOHTumaYQi
H/jxxx9Ne3Cu7LXXXm7mzJlhD0kIkSGkQ4QoLB555JFIT7kLL7xQ/lkiLswP
vdfaVVddVaLX4pPlc7I454QIAh+NW2+91TzVOF8GDBigOiIhCgjpECEKC3TH
JZdcYvXHO+ywg7xURUKOP/540xKHHHKI9QJJFnqx8zp6s3/zzTdpHKHIZSZP
nhzJxzruuONM+wohCgfpECEKj6+//to1atTI7v0HHHCAmz17dthDElnKQw89
ZOcJa9ULFiR3r2CN2/cubN26tda3RSCff/65a9CggZ0nVatWNV8DIURhIR0i
RGHy8ssvW491vw6pnsUiCHp+4GvAeXLbbbcl9Rp8ovE84jXDhg1L8whFLoKn
Mz5sxGW32WYbN2rUKOlVIQoQ6RAhChOfl806Nw88M//888+whyWyDPxU69ev
b5qiadOmSb2GOSXbb7nlluaNIEQsjz/+uOXscZ6cffbZ8scSokCRDhGicPnh
hx/csccea3MBekXgjyRELL7Wg3qi7777rtjtia+xfY0aNUzvChHN+++/b359
nCP0V/3kk0/CHpIQIiSkQ4QobMjJ9v6qzAnmzJkT9pBElsG8Ee9ezpGnnnoq
4bb0P/QeW7169crQCEWusHz58ohHb6VKldyzzz4b9pCEECEiHSKEIEdit912
i/QQ+/bbb8MeksgiyOXfd9997fzo1q1bwm1feeUV2468/2nTpmVohCIX+PXX
X90VV1zhNttsM7fVVlu5gQMHur/++ivsYQkhQkQ6RAiBH2v//v1tbsAc4eqr
r1ZfEbEJZ511lumL/fffP2Ed0WWXXWbb4cWqnH/hoQb94YcfduXKlbPzo0uX
Lu6nn34Ke1hCiJCRDhFCwOrVq13nzp0jPR/GjBljNcpCwGOPPWbnBjo1Xj4/
a9uHHnqobXfiiSdmeIQim3nrrbesBw3nRs2aNZP2gBZC5DfSIUL8H6zx4jf6
8ccfuyVLlqTUO4r5/NKlS23fPFauXFmsRyXHp/9bvO34O56q5Mykivnz50f6
Phx44IFuypQpKdu3yG3oOUO8jHNj5MiRgdt89tln1hebbdQfU3gWL17sWrRo
YecFXuHPPfdcWo6DDl60aJFpHh54taXSJ2Ht2rVWP/f666+7mTNnms9HcTAe
rtNB13H+xu+KPipCFCrSIaLQ4V4wffp0N2TIEDd27Firw2UOdeedd9r9pqz3
Mdb92Pctt9ziBg0a5Pr06eMuuOAC+9uHH34Y93Xcn8jFv/32292kSZPcO++8
Y/XCM2bMcBMmTHB33HGH7WvDhg1lGl8sL730kvUUY85AjzGOKQRa2nscnXTS
SYHbPPDAA5Geh2gSIag1O/300yNx1qFDh6alJoQYHdfEESNGuKefftqNGzfO
rrFcP7/66qsy7Zvxvvjii7YvcsvwFeRfclmpraPuJR7kKXbt2tV67xBTnDhx
onv++efd+PHjbX8XXnihaRohChXpEFHIoEG4L5xwwgl2T+B+wPoV9bX8f/v2
7e0+U9r+WmiGq666yvQH90Xm+E8++aTr3r275c9zXP4WBPN/7t3bb7+95TG0
bNnSxkN/avxQ+Rs94lJ9T/d53L5uHQ/WL7/8MqXHELlJjx49ImvaQXOv0047
LRJLU/2x2Lhxo9WaoUuJk1177bX2t1TzwQcfWE7p5Zdf7t5++22LUxBznjx5
sjvllFPcOeecYzGJ0oD+Jkf16KOPdvfdd5/Fs6lrIdZCXJA4z9133x33fK9d
u7b9Jrbbbjt3wAEHmCdhrVq1LEdtv/32s/uDesiKQkY6RBQyzPW5L1CDG1tT
y/2SeMRBBx1UKi/bFStWuFNPPdU98sgjRWIW3BPPPPNMuz+RBxUUF2Fs9Bku
X768befXmbmXsV/0USpzsqL5/fffrWcEeTj4tV500UWWkyAKG+Jw3gtr7ty5
mzzHObP33nvb8+hsUdgwLx8+fHikV+HJJ59s2iDVcN1mPQftS+5rLO+++67b
ZZddbL5fmtg2a0n77LOPxbBjc3V5j9ddd535D7/22muBr0eHMDa8rHfaaSd7
EG+mforPJ5ncLiHyGekQUaiw7o8WYJ49e/bswG2YazH3Z7uSxkSIVRC7+PHH
HwOfX7hwofWF4x7NPS4WdAhrZuynb9++dr/D5/KJJ56wfOt0w7jRYcw5icmQ
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
3tW8CCHyC+kQIUQuQJ36s88+a96jm2++uT1atGjh7r777qyPLbz66qu2zk7N
izRIdkPfGuIizOnJC6QHYrbC2F5//XXre4k2R4MccMABbuDAgabdhRAi25EO
EULkCsQ+5s2b52666Sa3995727yLniNnn3229UfIxrVfvHkbN25svkz00RPZ
Dz1ciIegRZ5++umwhxMI9fXEQBo2bGi+cvjLnXjiiabV881bTgiRv0iHCCFy
jTVr1rgnnnjCPICYg+EHVLt2bcvdWrFiRdjDi0CveHp3k0O2fPnysIcjSsC6
deus3rtevXoWz8oW8GjA85m8K+/HS74iY50/f37O5CkKIQRIhwghchFyUvAA
uuGGG9w+++xj8zF8funHQQ+SsGMj5Ip16tTJ+lZ/9tlnoY5FlI7Vq1db/w38
zdCUYbN06VJ36623Wo4f+htPXjzkJkyYYJ5fQgiRa0iHCCFyGeaK+FDRK4Hc
FGIjeP327dvXLV68OJQxUe9MHhZr6Wglkbsw9+fcIufpu+++C2UMeHkR/zvp
pJPcrrvuapr7kEMOsfjfwoULQxmTEEKkAukQIUSu4+tGbrnlFnfQQQfZPK18
+fKuQ4cO1if7559/zuhY7rvvPle1alXrVyhynw8++MDVrFnTXXXVVRn18+Vc
mjlzpvW7RHdwXm+33XbutNNOs3oo1YEIIXId6RAhRL5AbsqkSZPcBRdc4HbZ
ZZeIf9B5551n/Q8z4cPKvPGwww5zd9xxR871oBDBoAeoV0fjPv744xk55uef
f27nEJ5w5F/RO6dBgwZu6NChbtGiRaoDEULkBdIhQoh846uvvnJjxoxxLVu2
tDwtPH7pCUH/wAUL0ne9o0a+TZs2pnt++umntB1HZB78fPGnIi5CfCRd4MFA
DO+EE06IePHuueee7sorr3RTp07N6V7vQggRi3SIECIfIfYxY8YMd/3117sq
VarYfG7HHXd07dq1c/fcc4/5nqYSfIyuueYa8+369NNPU7pvkR2gLdEHPIqr
CyeeQWwsWYidEbPDW40YHufrtttuazUh1IaEVZsihBDpRDpECJHPUMdOTwV6
jOy00042v9trr70sx576dnpFpIIpU6aYfyp900X+8v7777vq1atb/8xEXH31
1ZZTVVyPTfKr5s6d63r37m0xO2J3eGE1a9bM9PKHH36Y1b0UhRCiLEiHCCEK
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
j9qGE044wTQPeUXPP/+8+RVfccUVbsCAAXZMdAmeUL169bLX0R/lggsucDVr
1nQHHHCAzcHp2zd8+HDTIbxXavE7depkc/yvv/468PjolltuucU98sgjdgzG
Sr9HvI2p/UbjMMZY0EXEHmrXru0OPPBAGzuaC/3y4osvmpbgfXTp0sUe0foN
zcbr0Zn0IORzpldl9Oc8dOjQuJ9ZPMjl22677RLqJyGEKHSkQ4QQIj6szVPj
QY+6krJu3TqbQ3stwmP77bd3+++/v2vYsKHN92+66aZI/CAa4iOs6/OoXLmy
vZa4gv8bD/qRxHL++ee7OnXqbJLDxZr/jBkzTCNw3Hj+v8Qr6MPXuXNni80w
5ycug5ZAix166KHmX0yOGXEK/g7EI95880131FFH2TiZuw8cONDm/95fjP0M
GTLEbbHFFnH70aPPDj744CJ9ANEN7du3t/EHaS+8dtEs6CyOT88Wjo+WIYYD
v/32m+mYzTbbzJ133nmR1/J3/3mefPLJ9no0W/TnXJo+93x2Rx55pGlJIYQQ
wUiHCCFEfOgx2Lp161K/njwg1uWbNWtm6+Nej/gHcQXm74lqmlnjT6Y+hLkv
mmmXXXYJ9I0lpvGf//zHYg6xkA+FJxfHIYYQ+1yNGjWsdoLei0CciFytaNBc
vB6tQw+O2JoYdBPP04clCPLf+IwaNWpU5LUcl9cm+i7uuOMO2wYdRl5ZbOwE
LUm9Dp9R7NiBmAivT0V9CBAvwmdNCCFEMNIhQggRH3qh9+/fv0z7IBaA1xa9
KW6++WZ32mmnWQ7RNttsE9Ej9OAmpyqIZHUIc3fm6eXLl3d9+/Yt8jz1G+zn
mGOOKfIceUzEKnieeolYfKyAmvl4kLfFNocddpjV6ceCnkEHoQWC+o2TT8bY
0WWx4EHl40lBuVlAfhXb4JUcr2cLr2cbHyeJJtU6hFw+NCF1KkIIIYoiHSKE
EMHgt0sfQmosUgE6gTV5aj/IY6IOgnoJ5uXMz6kdCSJZHQKzZ8+2em3qMzxo
Aubx1G34eEEs6BDGwPPR9fKe008/3Z6jDiQeXocQ14iHPwZ1GbEwZsbOe/D4
+nhyyXgdrw/SOOB1CLGneBALYZugGpVU6xBy2IghkbcmhBCiKNIhQggRDPNh
asRLUxuC5iiujx11G4sXL47UNZCvFDTHLokO8cdesGCBeURRi0GtBD5SV199
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
9jBEHkD/FXQIuW9CCCH+h3SIEEIUhR6G9BoUoqzQc3GzzTZTXpYQQsQgHSKE
EEVp1qyZ1WQLUVaordlmm23CHoYQQmQd0iFCCFGUo446yvXv3z/sYYg8YMqU
KW6nnXYKexhCCJF1SIcIIURRTjnlFHfllVeGPQyRB4wbN87tt99+YQ9DCCGy
DukQIYQoykUXXeTOOuussIch8oDhw4e7I488MuxhCCFE1iEdIoQQRbnhhhtc
+/btwx6GyAP69evnjj766LCHIYQQWYd0iBBCFEVr2GXnjTfecAMGDHB9+vRx
l1xyic3HCxHF1oQQIhjpECGEKMqkSZPc7rvvHvYwcpqXX37ZXXfdda5u3bpu
u+22c/Xr1w97SKFAXO36668PexhCCJF1SIcIIURRFixY4DbffHO3fv36sIeS
s6xatcp9/vnn1oeFPn6Zji9988037uOPP87oMYM47LDD3AMPPBD2MIQQIuuQ
DhFCiKKsWbPG/ec//3GffPJJ2EPJeejjF4YOmThxohs1alRGjxnL33//7cqV
K2c5akIIITZFOkQIIYryzz//uD322MM999xzYQ8l53n//fdD0SGDBg2y+pQw
+frrr91///tft3z58lDHIYQQ2Yh0iBBCBNO6dWt38803hz2MnCcsHUJdRtg6
ZPLkyW633XZzf/75Z6jjEEKIbEQ6RAghgrniiitcp06dwh5GzhOGDvnoo4+s
h3nYOuS2225zjRs3DnUMQgiRrUiHCCFEMA8//LA74IAD3L///puxY5IPtnbt
WsvjWbduXeTvv/32m1u2bJn74osv3C+//FLkdYxxxYoV9jz/Jgvbv/POO+61
115zs2fPdhs2bCj2Nb/++qv7/vvvNzkO9TRLly4NHFsqdAify6JFi9zUqVPd
m2++6T799NO43wvPdejQwY4Ztg7p0qWLu/jii0MdgxBCZCvSIUIIEQw16ltt
tZX5LmWCnj17uhNOOMHyicgJe+GFF9xff/3lHnvsMTds2DD3yCOPuDvuuMOd
fPLJbsSIEfYc4O3F38eMGWOPbt26ucsuu8x9+eWXcY/13Xff2Rz93nvvtXru
p556yno3nnTSSe7ZZ58NnOMznlNOOcXm+PTlu/zyy60O+4knnnB33323xY86
d+5cpLY/ng5By9BbI/Yxa9asIq8///zz3U033eTGjx9v4+Oz6tGjh+kozw8/
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
PUJM4KSTTrL6ka5du7pJkya5jRs3hj28lELd/ltvveWuuOIKV7t2bYsHoUXQ
Hz/88IP5YwkhhMgtpEOEECK3IQ8Jb60JEya4Hj16mL8WuUrkKb333ntWX5KL
oC3IQ7v33nutzzz6g37oDz/8sFu4cKH1BhFCCJG7SIcIIUR+8Pvvv7tly5a5
2bNnuzvvvNN16dLFvKPatm3rBg0a5KZPn241JtkMcY958+a54cOHuxNPPNHV
rFnTavP79etn8ZAvvvgi72I9QghRqEiHCCFEfkEcAb9fYiRTp051N998szvh
hBPcEUcc4Zo0aeIuu+wy98QTT1hOV9ieUv/884/7/9q789gqq62P47S0ZR5a
JiNFiMwICsggAUU0oCCTGEErqMhQmSRKUBAQFXMBAZlFBCxjmUWMRiECQsIs
URCjyAwpZRKkgEIp7jdrJed5fW9bXtpzejbdz/eTnFy0h6fr8Z+7f9l7r3Xw
4EHdyxk+fLjOHJTZ523btjVvvvmm9t7dv3+/nr2S7wIA3EEOAQB3yZmss2fP
6vmmzZs3m6lTp+osErnfHsglffr0MZMmTTJr167V7+XVnonUIrNP1q1bZ2bO
nKl5SHKH3Gtp2bKlZg/pu5ucnKznrk6dOmU9JwEA8g45BAD8QfYT5G770aNH
zd69e83GjRs1DwwdOtS88MILeqdEMoH0A+7QoYPmFTkPJfczFi5cqDlFzkbt
2rVLz079+uuv3kd6dcm/l5mLX331lWYJ6S88ZswYM2DAAD1j1bx5c32+9Njt
2rWrzmSU/PPNN9/op3Tp0iYuLs6sXr3a9n8qAEAYkEMAwJ9kf0J6AMs8RJn7
J7M3JGfMnz9f75eMGDHC9O/fXzOK5Ai5ZyK9ciWnNGrUyNSrV8/7yD0U+feS
MVq3bm06d+5sEhISdK9FzleNHz/ezJ07V/dC9uzZo9nlxIkTen5M7oTI3ZYK
FSqYAgUKmDfeeMP2fxoAQBiQQwDAHyRvyNmsW5E9E7kHLr2o5FyU7J38/vvv
el5L7pPIPoj0ypW9j+3bt3sf6csl/14yhuy1/PLLL5ptjhw5YlJSUsz58+fN
5cuXNXNkR+6jSw6RjAMAcB85BADcJzlC7mDUqFFDM8SdSPZgJIcULlyYmYQA
4APkEABwl+xvLFu2TM9NRUVF6Tr/nXfesV1WlmRfReqTj5zfAgC4jRwCAG6S
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
3MghAAAAAMKNHAIAAAAg3AI55H8AvrSj3g==
     "], {{0, 592.}, {802., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->72],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{383.5944305419922, Automatic},
   ImageSizeRaw->{802., 592.},
   PlotRange->{{0, 802.}, {0, 592.}}]], "Input",ExpressionUUID->
  "377abca7-b9f7-4dc6-a717-d1d9134320f0"],
 "\n \n ",
 StyleBox["Question 1",
  FontWeight->"Bold"],
 ".  Input the transition matrix for this system.  Make sure that your \
columns add to one.  \n Call your matrix T.  \n                        |   \
bull       |   bear   |   stagnant\n bull               |     0.9          \
0.15             0.25\n bear              |  0.075        0.8               \
0.25\n stagnant     |  0.025        0.05             0.5"
}], "Text",
 CellChangeTimes->{{3.846168513474951*^9, 3.846168544711712*^9}, {
  3.846168617456038*^9, 3.846168859891477*^9}, {3.8461689328363*^9, 
  3.84616894333265*^9}, {3.846181809833625*^9, 3.846181829850819*^9}, {
  3.846231345195822*^9, 3.846231359927643*^9}, {3.911482193764781*^9, 
  3.911482349917491*^9}, {3.9114824087951565`*^9, 3.9114825877576575`*^9}, {
  3.9114828194636393`*^9, 3.9114828746498632`*^9}, {3.911483619453413*^9, 
  3.911483626927006*^9}, {3.911483673417574*^9, 3.9114836746174355`*^9}, {
  3.9114837753228045`*^9, 
  3.911483776172034*^9}},ExpressionUUID->"3bceff05-81a6-452e-9d22-\
1b6a3b8c3528"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Define", " ", "the", " ", "transition", " ", "matrix", " ", "T"}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"T", " ", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.9", ",", " ", "0.15", ",", " ", "0.25"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0.075", ",", " ", "0.8", ",", " ", "0.25"}], "}"}], ",", " ", 
      
      RowBox[{"{", 
       RowBox[{"0.025", ",", " ", "0.05", ",", " ", "0.5"}], "}"}]}], "}"}]}],
    ";"}]}]], "Input",
 CellChangeTimes->{{3.9114821996136847`*^9, 3.911482205072419*^9}, {
  3.911483057413891*^9, 3.911483094960443*^9}, {3.911483315145752*^9, 
  3.911483340896064*^9}, {3.911483516360695*^9, 3.9114835547833705`*^9}, {
  3.9114836295442686`*^9, 
  3.9114836421537347`*^9}},ExpressionUUID->"740f506a-47df-4a4a-a74a-\
f0160ae58884"],

Cell[TextData[{
 StyleBox["Question 2.  ",
  FontWeight->"Bold"],
 "Suppose that the current/initial state of the market is \
\[OpenCurlyDoubleQuote]stagnant.\[CloseCurlyDoubleQuote]  Find the \
probability of being in each state when ",
 StyleBox["time = 2",
  FontSlant->"Italic"],
 StyleBox[" ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "(weeks).  ",
 StyleBox["  Note: ",
  FontSlant->"Italic"],
 "To multiply a matrix use  \[OpenCurlyQuote].\[CloseCurlyQuote] rather than \
*.  "
}], "Text",
 CellChangeTimes->{{3.8461688675902023`*^9, 3.846168972374996*^9}, {
   3.846181871396615*^9, 3.846181874846993*^9}, {3.846231361233428*^9, 
   3.846231377375061*^9}, {3.860785324573105*^9, 3.860785326168085*^9}, {
   3.87919046268501*^9, 3.879190479280819*^9}, {3.9114832041049414`*^9, 
   3.911483212894163*^9}, 
   3.9114839239515886`*^9},ExpressionUUID->"719c6242-5a84-4e7c-aab3-\
567d27148ccb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Define", " ", "the", " ", "initial", " ", "vector", " ", "timeZero"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"timeZero", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "0", "}"}], ",", " ", 
       RowBox[{"{", "0", "}"}], ",", " ", 
       RowBox[{"{", "1", "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Perform", " ", "matrix", " ", "multiplication"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timeOne", " ", "=", " ", 
     RowBox[{"T", ".", "timeZero"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timeTwo", " ", "=", " ", 
     RowBox[{"T", ".", "timeOne"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Display", " ", "the", " ", "results"}], "*)"}], 
   "\[IndentingNewLine]", "timeZero", "\n", "timeOne", "\n", 
   "timeTwo"}]}]], "Input",
 CellChangeTimes->{{3.91148322064894*^9, 3.911483307978858*^9}, {
   3.9114835186762276`*^9, 3.9114835245609303`*^9}, {3.9114836790266914`*^9, 
   3.911483695529782*^9}, 
   3.9114841093455305`*^9},ExpressionUUID->"c6b53ec6-6d69-423e-b760-\
a46d25ed04ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "1", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.911483697556589*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"ce044541-23bd-4abe-b58d-6f2666514d50"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.25`", "}"}], ",", 
   RowBox[{"{", "0.25`", "}"}], ",", 
   RowBox[{"{", "0.5`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.911483697556589*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"b8557ac0-0bdf-43e5-845b-12701acec55a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.3875`", "}"}], ",", 
   RowBox[{"{", "0.34375`", "}"}], ",", 
   RowBox[{"{", "0.26875`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9114836975672264`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"f6c5a4c6-9ca9-4055-865a-9c6eb60b1072"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Question 3.  ",
  FontWeight->"Bold"],
 "Consider larger and larger values of ",
 StyleBox["time.  ",
  FontSlant->"Italic"],
 "(Use ",
 StyleBox["MatrixPower[A, n]",
  FontWeight->"Bold"],
 ")  What do you observe? \n",
 StyleBox["We get the same results!",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.846168989746739*^9, 3.8461690460690527`*^9}, {
  3.911483978232959*^9, 3.9114839792969065`*^9}, {3.911484282008813*^9, 
  3.911484290211422*^9}},ExpressionUUID->"ae9a7491-1946-453c-b45d-\
7612265d27e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Repeat", " ", "calculation", " ", "with", " ", "MatrixPower"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"timeOneWithPower", "=", 
    RowBox[{
     RowBox[{"MatrixPower", "[", 
      RowBox[{"T", ",", "1"}], "]"}], ".", "timeZero"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"timeTwoWithPower", "=", 
    RowBox[{
     RowBox[{"MatrixPower", "[", 
      RowBox[{"T", ",", "2"}], "]"}], ".", "timeZero"}]}]}]}]], "Input",
 CellChangeTimes->{{3.911483988495471*^9, 3.911484132180722*^9}, {
  3.911484224705939*^9, 3.911484272792837*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"f969c4d4-119b-4cb4-b568-931fdb07e685"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.25`", "}"}], ",", 
   RowBox[{"{", "0.25`", "}"}], ",", 
   RowBox[{"{", "0.5`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.911484133450177*^9, {3.911484251054113*^9, 3.9114842742480016`*^9}},
 CellLabel->"Out[32]=",ExpressionUUID->"50a17fe3-2a30-40f3-8f7a-82da5a98e13f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.3875`", "}"}], ",", 
   RowBox[{"{", "0.34375`", "}"}], ",", 
   RowBox[{"{", "0.26875`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.911484133450177*^9, {3.911484251054113*^9, 3.9114842742480016`*^9}},
 CellLabel->"Out[33]=",ExpressionUUID->"b11256a7-1852-4a68-88ae-00f771f86a5e"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Question 4.  ",
  FontWeight->"Bold"],
 "Find the eigenvalues and eigenvectors of T.  You can use the function",
 StyleBox[" Eigenvalues[A]",
  FontWeight->"Bold"],
 " and ",
 StyleBox["Eigenvectors[A]",
  FontWeight->"Bold"],
 ".  If you only want to consider the first element of the array, you can put \
",
 StyleBox["[[1]]",
  FontWeight->"Bold"],
 " at the end; for instance ",
 StyleBox["Eigenvectors[A][[1]]",
  FontWeight->"Bold"],
 ".   \n\nWhich eigenvector will give you the steady state?  \n",
 StyleBox["The steady state is associated with the eigenvector corresponding \
to the eigenvalue of 1.",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.846169052073381*^9, 3.8461692025720367`*^9}, {
  3.846181122036042*^9, 3.846181215050324*^9}, {3.846181906736823*^9, 
  3.84618191254329*^9}, {3.879190500949431*^9, 3.879190516753304*^9}, {
  3.911486437110509*^9, 
  3.9114864566684446`*^9}},ExpressionUUID->"464e7ac1-224d-4feb-bb95-\
47f8857ae08a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Find", " ", "eigenvalues", " ", "and", " ", "eigenvectors"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"eigenvalues", "=", 
     RowBox[{"Eigenvalues", "[", "T", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"eigenvectors", "=", 
     RowBox[{"Eigenvectors", "[", "T", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Display", " ", "eigenvalues", " ", "and", " ", "eigenvectors"}], 
    "*)"}], "\n", "eigenvalues", "\n", "eigenvectors"}]}]], "Input",
 CellChangeTimes->{{3.911484395197107*^9, 3.9114844039419985`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"545e40b6-ee2b-47fb-898b-ac048509d08f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9999999999999999`", ",", "0.7414213562373091`", ",", 
   "0.4585786437626905`"}], "}"}]], "Output",
 CellChangeTimes->{3.911484407355855*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"5201c9aa-8add-43b6-bcf4-3f3e450fad77"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.8908708063747479`", ",", "0.44543540318737396`", ",", 
     "0.08908708063747478`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.736580403418877`", ",", 
     RowBox[{"-", "0.6733917945837845`"}], ",", 
     RowBox[{"-", "0.06318860883509417`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.275691875705852`"}], ",", 
     RowBox[{"-", "0.5277331275122201`"}], ",", "0.8034250032180726`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.911484407355855*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"5c765dcc-7ebe-4139-9dd9-1bdf81d7d8ec"]
}, Open  ]],

Cell[TextData[{
 "Re-scale this eigenvector (i.e.,  choose another eigenvector in the \
eigenspace/span) so that it represents a probability vector (dividing by the \
sum of the entries will do).  If you want to calculate the sum of a vector v \
you can use ",
 StyleBox["Norm[v, 1]",
  FontWeight->"Bold"],
 ".  "
}], "Text",
 CellChangeTimes->{{3.911486472952657*^9, 
  3.911486490490709*^9}},ExpressionUUID->"1aecb170-16a8-4038-96c2-\
5fdcb1ca89b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "index", " ", "of", " ", "eigenvalue", " ", "equal", " ", "to",
     " ", "1"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"index", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Steady", " ", "state", " ", "eigenvector"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"steadyStateEigenvector", "=", 
     RowBox[{"eigenvectors", "[", 
      RowBox[{"[", "index", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Rescale", " ", "the", " ", "eigenvector", " ", "to", " ", "represent", 
     " ", "a", " ", "probability", " ", "vector"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"normalizedSteadyStateEigenvector", "=", 
     RowBox[{"steadyStateEigenvector", "/", 
      RowBox[{"Norm", "[", 
       RowBox[{"steadyStateEigenvector", ",", "1"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Display", " ", "the", " ", "normalized", " ", "steady", " ", "state", 
     " ", "eigenvector"}], "*)"}], "\n", "normalizedSteadyStateEigenvector", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.911486504421897*^9, 3.911486508386465*^9}, {
  3.9114865728358*^9, 3.9114866436288066`*^9}, {3.911486682598412*^9, 
  3.911486699610865*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"68cf4ba9-3a26-4a9f-9db9-694683ea04c5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.625`", ",", "0.3125`", ",", "0.06249999999999999`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.911486535950205*^9, {3.911486586145123*^9, 3.9114866290413218`*^9}, {
   3.9114866972278037`*^9, 3.9114867014685974`*^9}},
 CellLabel->"Out[61]=",ExpressionUUID->"48fe06ab-5fe7-406d-8ba2-cecb9e280807"]
}, Open  ]],

Cell[TextData[{
 StyleBox["\nOkay, now let\[CloseCurlyQuote]s talk about Google. ",
  FontWeight->"Bold"],
 "\n\n\nGoogle went online in the late 1990s, and when it did, the thing that \
set it apart was that the search result listings always seemed to give what \
you wanted toward the top (with other search engines, you\[CloseCurlyQuote]d \
have to flip through pages and pages).  Part of what made Google so powerful \
was the PageRank algorithm.  It rates the importance of each webpage, and \
from there present the user with the most relevant pages first.  \n\nThe \
PageRank algorithm operates from the following belief about how pages should \
be ranked:\n\n",
 StyleBox["The Set Up: ",
  FontWeight->"Bold"],
 StyleBox["Suppose that there is a \[OpenCurlyDoubleQuote]web surfer\
\[CloseCurlyDoubleQuote] who is crawling across the Internet and, when they \
are at a webpage, they look at all of the links on the page and randomly \
click one of them.  (So if there are links to three other webpages, they \
would click each one with probability 1/3.)  The score of the webpage should \
be the probability that, in the long run, the surfer is on that page.  That \
is, the user is taking a random walk on the Internet graph.  ",
  FontSlant->"Italic"],
 "\n\nThat is, the PageRank vector is the steady state of a Markov \
chain/process.  \n"
}], "Text",
 CellChangeTimes->{{3.846169263658588*^9, 3.846169443622851*^9}, {
   3.846169545304483*^9, 3.846169630728799*^9}, {3.8461696793948803`*^9, 
   3.8461696795373497`*^9}, {3.846169713500433*^9, 3.846169796935584*^9}, 
   3.8461698436685057`*^9, {3.84617261500814*^9, 3.8461726154177303`*^9}, {
   3.8461819441567497`*^9, 3.846181981497786*^9}, 3.846194889278647*^9, {
   3.860785458057197*^9, 3.8607854630874033`*^9}, {3.879190553994182*^9, 
   3.879190574554038*^9}, {3.9114867041207485`*^9, 
   3.9114867057563353`*^9}},ExpressionUUID->"3b6b0209-7137-4e05-a63d-\
a04a1dff7c6d"],

Cell[TextData[{
 "Suppose that we have an internet with only four pages (1, 2, 3, 4) with the \
following links (see Figure).  ",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztnWe8FEXat33f5/3wfHy/rggqurprQHIwwyGZEcQFBSQeBARJhgUkiaIE
ExKVrAKS1FXJOaqogAoiinBAMkoSDrEe7nm2znb19Mx0Tdf03V3zv3+/a1dm
upu6u2suuqq6qq9u/XTDwv972WWX9fjvS//TsNVzNbt3b/XPRv//0h8ad+nR
oX2Xdm3v6dKzXft23au3/q9LH77yfy677MFL/L9L/y0QCAQCgUAgEIhIxkUA
ALCAsII7TwAAMEVYwZ0nAACYIqzgzhMAAEwRVnDnCQAApggruPMEAABThBXc
eQIAgCnCCu48AQDAFGEFd54AAGCKsII7TwAAMEVYwZ0nAACYIqzgzhMAAEwR
VnDnCQAApggruPMEAABThBXceQIAgCnCCu48AQDAFGEFd57g22+/EYcPH2Iv
BwBcLFm8yNCxwgozeR87djTx+wd6zJgxXfz9uuvEb7/tMXYtAA9FRbvY61Mc
eXHgAFGndm1D1yGsCF7WI0cOi8v/8hcQgKJdO41cC8DDunVr2etQnKlcsaKh
axFWBC/r559/xn7e484br79m5FoAHrp368Zeh2LN5ZeLnb/uMHAtworgdQbe
DM7u3UVGrgXgAd4MjplrEVYEL6vbm1u2/CB27PgFpOGjj+Yq5wz9m/HG6c3r
r7+evX7FgWd69iw5Z3+99lpD1yKsCF5WtzdPnz5l5Lg288UX6+FNi3B68576
9dnLEwcGvfgivAlvagFv2gW8qQ+8CW/qAm/aBbypD7wJb+oCb0afo0f/EFOn
TBbffvO1OHfubNpt4U194E14Uxd4M9rMnz9P3HTjjco1avDQQ2LEiLfEhg1f
iXNnzyjbw5v6wJvwpi7wZrT55usNonSpUmmfm7nvvvvEm2+8nriWXZ9+Gt7U
BN6EN3WBN6PPwIEDs3oO8c7bbxfFxafZyx914E14Uxd4Mx6cOVMs1q9fl5jP
RfeXOv6sVbOmGDJkiFi1aqU4depP9lyiBrwJb+oCb8YT6tf86qsvxVtvvZno
79Tx6B2X7kNfGTxYLF++TJw8eYI9F27gTXhTF3jTDmicncbb761fX7s9X71a
NfHSoEFiyZLF4vjxY+y5hA28CW/qAm/ahXM8/a677hJjx4wWTZs00fJoxQoV
En2qCxcuSKzLyJ1TroE388ObdG/x7DPPiEoVK4ryt9wSiBv+/nflnN18002B
jwn4uPqqq0quZekrrij5vNzNN2c1tiTvR/v17cte73MFvGm/Ny9evCCebN8+
698AANlC619w1/9cAG/a701izOhR7L8hkH/MmjWTve7nAngzP7xJzJg+LdF2
Ckr7wkLlnPXs0d3IcQEPNe++u+Ra3lKuXOKzvi+8IJo1ayauKVtWy5PUzq9X
t25ivhI9w8Rd53MFvJk/3jQFxoXswjkuVLVKFe0+Herf7t+/v1iwYH5ejAkR
8Ca8qQu8aQe//PKzeO+9qaJa1arwpCbwJrypC7wZT6QncT8ZHHgT3tQlG2/+
+efJBNxlzyeCeLJfv37wZBrgTXhTFz/eJEeuWLE8MTfvtltvTWxXoXz5xPgq
PRfFnYPttGrZ0rcnnc9v1q1Th73scQDehDd18fKmlye9uPOOO5LWfwRmWbRw
ge/7SVrfGOtv6gNvwpu6uL2pM66wbNlS9vLbDq3dUbugQDR7/HFPT7q3hzf1
gTfhTT847ydpLrJOf1nz5s3Fu+++k3jHMnce+QL1hdA6cl6edANv6gNvwpte
+G13Z/LkhQvn2XMB6YE39YE34U0iiCcfeeQReDLGwJv6wJv56c0gnnzggQeS
xoW48wHZA2/qA2/mjzfXrlmd8OSDLu/5geYc07PP06dPu3SMl5Xvxo0dIz6c
MR3ElIYNGpRcy+pVqxo55syZH1r9W4I388Obup4EICi09rGtvyd4035vnj9/
jv03BPIPehfx0qVL2Ot/LoA37fcmQX2Z3L8jkF9Qe5273ucKeDM/vCnZt2+v
mDNntujZo4f274DeszF37hwxf/485XOMC8UbjAvpA2/mlzfdBPGoZNOmjex5
gOyBN/WBN/Pbm25M3I/u37+PPQ/gH3hTH3gT3kwHPGo/8KY+8Ca8qQN5dOjQ
IVm158mjWIMzesCb+tC74p1128xxw4rgZYU39XGvhzR+/Hjf96P03D13+YEK
vKkPzS2GN+FNHdKtW5yuXV+mdGlRo3p1cRbrb0YKeFOf++69t+Sc0Ts/zRw3
rAheVnhTH533ZEiPzvxwhvh6w1fi5MkT7OUHKvCmPk5von8T3vQD3stmF/Cm
Pg0efBDehDe1gDftAt7UZ0D/fvAmvKkFvGkX8KY+eA4pXt6kOY4DBg78NwNY
ygBv2kXUvHn48CHx6WefiomTJophw4eLl15+SYweM1rMmTMrMnPT4M14efOJ
Vi1FuQrlS+AoA7xpF1Hx5uo1q0XbwnaiQqWKSh13c/8D94uRo0ayjjHCm/Hx
5u49RUl1iqMc8KZdcHuz+EyxeObZZ9O60ov6996TeHcnxzmDN+Pjzef/+XxS
3eEoB7xpF5zepLVhOz3VSduZkqrVqonN320K/ZzBm/Hw5vDXhnvWG46ywJt2
wenNT/71iWe9rlKtqujydBcxdNgw8dLgl0XrNq3FbXfe4bltQe2C0Nvs8GZ0
vXnq1J+J8nXo2DHlv7cc5YI37YLLm/SO94aPNEqq0+RIr/e+0zyz115/TZSv
WCFpnw+mfRDqOYM3o+XNXbt2JsZ+qO+mYuVKGdspHGWEN+2Cy5vLVyxLqs+t
WrdO3C+k22/6jGlJ+zVp2jTUcwZvRsubmzdv0urf4SgjvGkXXN7s3ad3Un0u
2l2Ucb8LF86LBg0fVvarfmuNUM8ZvAlv6gJv2gWXN6k97qzLzZo3973vkKFD
kn4LR44cDq3s8Ga0vPndd5tFpSqVPYE3QS7g8uY9992r1GV6JtPvvq+8+krS
b+HEieOhlR3ejJY30zFk6FB4ExiHy5u1ahcodfmjj+f63tc9/6OgTu1Qzxm8
CW/qAm/aBZc3jx07mqg7kuLi07722779p8RzSs7fQbvCwlDPGbwJb+oivVkK
3rQC7vlCOhw4sD/xrIn7d7Bo8aJQywFvwpu6LFmyWDlnO3f+yn5uQPZE0Zs0
Zl5UtCvxTj+6v1y1epXoP6B/Yn6Q+zfQvOUTiWdBwywfvAlv6jJp0kTlnP38
83b2cwOyJ4re/PSzf/l6noScefz4sdDLB2/Cm7q4vYl2eryJojdTzb9088WX
61nKB2/Cm7rAm3YRZ28SPZ99JvR3/cGb8KYun376KbxpEVH05g9bfhBdu3cT
3bp3F4VPtheNH22cdl3Ojp06JvpEwyofvAlv6oLnkOwiit70gtaBnz1ntqhb
v56nO+d+5P/5z6DAm/CmLvCmXcTFm5J9+/eKBg83SPotPNSgQWhlgDfhTV3g
TbuImzcJuvesWj35maSw/n54E97UBd60izh6k+jVO3k9pbD+bngT3tQF3rQL
Dm82b9FCqccNGjXUPsb4CePhzawieFnhTX3gTbvg8GbPZ3sq9bjGbbdqH4PW
T4I3s4ngZYU39YE37YLDm/S+C3ddpncd6ByjU5fOyv70nFJY5wzehDd1gTft
gsObCxbOT6rL5FK/+x88eEDcesftyv733X9faOcM3oQ3dYE37YLDm6eLTyfe
beGsy3fcfZfYu/e3jPvS8+1tC9t5zBvqGdo5gzfhTV3gTbvgGk9/9rnnkupz
zYJaYtPm1O9D372nSDzd9emk/cjBu3fvDq3s8Ca8qQu8aRdc3tyzZ7eoWqN6
Up2mNYnpGSP6bX79zQaxfv26xDssBwwckLResWTS5EmhnjN4E97UBd60C87n
N6dMnZxyzrlfmj7WVJw/fy7UcsOb8KYu8KZdcD/3Pmv2zJT3kZno1PkpcfLk
idDLDG/Gx5v0PhZq20i4fAVv2gW3N4kffvhetO/wpChfsYIvX9Jz8vMXzAt1
DSQn8GZ8vBkV4E27iII3JdTepvez0T0k3SccPfpH4v9pTXf6rPjS7zPsNrkX
8Ca8qQu8aRdR8mZcgDfhTV3gTbuAN/WBN+FNXeBNu4A39YE34U1d4E27gDf1
gTfhTV3gTbuAN/WBN+FNXeBNu4A39YE34U1d4E27gDf1gTfhTV3gTbuAN/WB
N+FNXeBNu4A39YE34U1d4E27gDf1gTfhTV3gTbuAN/WBN+FNXeBNu4A39YE3
89ebFy9eEFMmTxITJoxPrJvgdz940y7gTX3gzfz15oYNX5Xk/fe//U3Mnj0r
4dJM+8GbdgFv6gNv5q83f/11h5I70ahhQ7F165a0+8GbdgFv6gNv5q83icaN
Gye5k+jXr584ceK45z7wpl3Am/rAm/ntzW3bfhRlypTxdCfx0Udzk/aBN+0C
3tQH3jTvTXIR93XVYeDAgSm9SdSvV0/JCd60i1x588yZYvbc3FCf/k8/bQt8
HHjTrDcXLlwgrrx0//bSoEFGyhcG1B5P500J+ZXeVQBv2oVJbx48eEB06dKl
5Hj0jgvu/CSTJ00sKRe9nyvIseBNc96kfZ3HWrlyhZEyhgG1x/24k+jTuze8
aREmvHnu3Fnx7rvviOuvv16pGzrPt+WamnffXVKuIUOGBDoWvGnOm3Qv5jwW
3Xty1xUdqD3u153wpj0E9Sa1P66/7rqkelGhfHm29026IX87y9bw4YcDHQ/e
hDcl1IeZjTe3b/+Jvewge7L1JrXJO3bokLJeLF++jD03yZLFi5SyXXXllYF+
6/AmvOlkwIABWbnzs88+ZS87yA5db8o2ebr60K5dO/a8nLzo8JxkzepVWR8P
3rTPm/Rv66xZM7PqX/UzRlT+UvvL6/OHHnxQ7NjxC0vOIHt0vElt8ptvuil2
fTeVK1VKKuPQoUOzPh68aZ8369apU1IGui/Q3V9njMiLV199VZw69SdL7kAf
P97M1CZ3MmLEW+w5OXH3bUpq1ayZ9THhTbu9ma073WNEN95wg7Y/58+fx5I/
0COdN/20yZ1Qv+HZs2fYc3Li7ts08XuHN+3z5icff5RUP3Td6R4juv2220Sj
Ro08696WLT+I5557zvM72mfnrztYzgPwRypv+m2TO1mxYjl7Pm68+jYl2fZx
wpv2eZMw4U73GNEHH7zv6c5169Ymtt+0aaOoUaOGZ/0cNmyYKC4+zXY+QGrc
3qQ2eaeOHbXbF0+0aMGeixdefZuSbPs44U07vUkEdafXGNGhQwdFndq1kz7f
tWtnYh96Xu/9999LWU8XL1rIek5AMk5vVqlcWduXkqiNBRGp+jYl2fZxwpv2
epMI6k73GFHfF15IjNN71UHpTuL334+Inj16eG7X5B//EEVFu9jPDfhfnN70
YviwoYnnxNNt8/bbI9jz8CJd32aQ3zy8abc3iaDudI8ROef5pnMn8e2336S8
h3nj9dciufZDPkFt8upVq3penxaX2t20Rus/Hn00rXfKXn115MaCJOn6NiXZ
9HHCm/Z7kwjiTt15RG53Utt96pTJntuWLlVKLF26hP385BvpxslpXRoa3yEX
ejnT/e/oqlUr2fNJRaWKFTPW12z6OOHN/PAmEcSd6eYReY0Fud1JHDlyWHTt
2tXzGM0efzzwGjXAH+nGyStWqJDwZSpnTpv2gfLnVi1bsueTikx9m5Js+jjh
zfzxJpGtO9PNI6I5Ql7j7F7uJL7e8FVizQevY7311puRbfPFHT/j5DSensqZ
tA4BvYfK+dnevb+x55WKdH2b1M4J8ruHN/PLm0S27kw1j4jGUamfUsed58+f
ExMnjPc8nmwncp8nW8jUJn+sadOSP1Mb3MuZ1M85buwY5bNRI99mzy0dg1x9
m39zrHHnfj+Mbh8nvJl/3iSydafXWnPy+RNddxL0XNNTnTp5/qZbPvFEpO9n
4kC6NjnNh6R7S+d4+nV//aunMw/s36d8du0114hzEW8XOPs227Zpo3iT3p/l
zEe3jxPezE9vEtm402uMyNkvmY07iS+//CLl73vBgvns5ypupGuT0zi581nL
dM8h/frvuV6FhYXK56sjPBZEuPs26RkQpzfp3QX0PJz8s24fJ7ypepPqUK9e
vbLC+X4AguYpZHussPByFbVh0u3j3p7mETnPabbuTNWepPtO7t9hXMjUJvda
EzPVeh2dO3dOXO/WrVsrn9eoXp293maC5i45y9zx0r8hV5YuXfLnOnXqJNbv
cm5Dc4X9Ht+5H7wJssX9PoRs3UkcOLBfPNm+fck+NDee20dxwE+b3L0PfVb+
llvY60+cyUdvUn8w93m3AZpH5D63QdxJfPvN12Lrlh/ExYsXjFxrW9Fpk7ud
+ahrfAToQ89u5Zs3CXpHE7U9glLu5puTzqmJ44bFTTfe6FkvUm3v3o4cZ9qd
IDXUJh8//l3Pa5aqTe50prN/T1LmUltWXt+qVaoo39GzO1UrV2avp5mo5pr/
dPOleu2ur9TXSZ/RunfyM/pv3b9r7do1BuflhxX8dddJ3MaFvNAZK3KPERXU
quV5bwh3mmfjxm8934VGZHoGNpUzf3Wt99eubVvl+yDvlQgT93Ob8n3p7nEh
+mzsmNHKtkHfAx6MsIL/GjmxwZuEjjvd84hmz57luR3caRbnM5cSapNnmnPl
15lr16xWvqfneLhz9ot7Trr8t9zLm5s3b4rQvw1hBf81cmKLNwm/7vSaR5Tq
ndlwpxnoPF5TtqzvNrnErzPpuUz3c5z79+9jz9sv7uc25ede3qT5F848g7xz
KDhhBf81cmKTNwm/7nTPI+rXt2/KY8KdwaHf+vr16xJrQY8c+baveal+nUmM
GT1K2Yb+zJ2zX7ye25TfeXmTCPIcp1nCCv7r5MQ2bxJ+3emeR7R165aUx4Q7
w0XHmfv27VW2oT7UqM8LcpKqb5NI5c3o9HGGFfzXyYmN3iT8uNPvGJEE7gwH
HWcS1K51bkf9nNw56JCqb5NI5c3o9HGGFfzXyYmt3iT8uNPvGJEE7swtus6k
uZPO7dq1a8eegy70LKVX3yaRypvR6eMMK/ivkxObvUlkcqfOGJEE7swNus6k
tjjNe3FuG6exICJd3yaRyptENPo4wwr+a+XEdm8SmdypM0YkgTvNoutMgtaE
c25LfX7ceehC7/xL1bdJpPNmNPo4wwr+a+UkH7xJZHJnvbp1le/SjRFJ4E4z
ZONM91gQ+YXmInHnossrgwen7Nsk0nnT3cdJc/3DzyGs4L9WTvLFm0Q6d7rH
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
G68nznupyy8X77//nvJdJm+uWLFclCldOvFdt65dWcofNnBmcIK4k+qgc7+u
/653+ehOeFNG+Lk1fPjhknP/j0cfVb7L5M1+ffuWfHdN2bIs5Q8TONMcQdz5
aOPGyn5fb/gq8Xm+uRPelBF+bsOGDVPq2Pnz50q+y+TNG2+4oeS7jh06sJQ/
LOBM82TrTvKgc58K5cuX1Nt8cie8KSP83NasXqXUr02bNpZ8l86bR4/+oXzn
buPbBJyZO7J15+uvDVf2mThhfMl3+eJOeFNG+LkVF59W6taY0aNKvkvnzQUL
5ivf7djxC0v5cw2cmXuycSe5sXSpUso+hw4dVL633Z3wpgye/Apq1So5/9R3
JD9P583+/fsr3/FfI/PAmeGRjTuXLl2ibN+pY0fle9vdCW/K4MkvVR9nOm/e
Uq5cyeft27dnK3uugDPDJxt3NmvWTNn+iy/WK9/b7E54UwZPfmvXrFbq1MaN
3yY+T+XN48eOKp9PnTKZrey5AM7kQ9ede/bsVralscpz584q29jqTnhTBk9+
7j7O0aNGJj5P5c3FixYqn2/f/hNb2U0DZ/Kj606ac+ncdty4sUnb2OhOeFMG
X451atcuuQaN/93HmcqbdI2cn1+8eIG17KYgZ9IzrHAmPzrupOtW9uqrlW0P
7N+XtJ1t7oQ3ZfDlOHzY0KQ+zlTerFSxYslnbdu0YS23KeDM6KHjzlWrVirb
tblULy9cOJ+0nU3uhDdlBC8r+c557wiyB87kR8edbVq3Zq8zNrB27RpD1y+s
CF5W9/xdkB1wZu6ge7uZH85QnrdMh1937r/UNueuNzZw/aX7WDPXOqwIXtbP
P/+M/bzHHfezLMActPab81xPmDBemdubCr/uHDtmNHv9iTt/vfZaQ9c7rDDv
zXfeGZeoq354okWLpH2df+7V65/iphtvLPlz7YIC38eOGpMmTRR333WnZ735
7bc9Rq4FSGbrlh+Szjc9C/zVV19m3NePO8+dPSNKX3GFsg2Nt6erB7fWqJF0
3DfffIO9jmbimquuKilvkyZNAh3L2VcKb/5FnD59yve+tAanc9/Vrr72uXPn
KH+e4JgTHCdSPWsEb+YeevaiVcuWnue981NPZWy7+3FnjerVle/pfiDdMeM6
VmRyXGjQiy/Cm1l6k+qPc98hQ4a47jd7KX+mewfuuqNLJmfCm+GwbNnSkrVb
3WRqu2dyZ/du3ZK+X758WdryxNGd8KaM4GUN4k2iXt26Jfs630lA1KpZU/lz
3J7bTOVM9+8Q3gwHchW1h73cmantns6dXt4sU6ZM4u/LVJ44uRPelBG8rEG9
6V6fKxXNmzc3Ut6wSDcPiMaB4E0+du8uEs0ef1y77Z7KnV7eJMjRmcoSJ3fC
mzKClzWoN9evX+fLm++++46R8oZBprmT8GY0yKbt7uXO+++/v+S/r3Qdr6ho
V8ZyxMWd8KaM4GUN6k13H2cqfvjheyPlzTV+5pvDm9Ehm7a7lzsld92pPjNB
dcFvOaLuTnhTRvCyBvUmcU/9+hm96TWHLWr4XaMD3oweum33VO6kutylSxfl
M1qXxk8Zou5OeFNG8LKa8GamPs7HH3vMSFlzic66RvBmdNFpu3u5k9xy+PCh
pM9pDTA/f3+U3QlvygheVhPezNTHOW7sGCNlzRW6a8HBm9FGp+2eaqxoyuRJ
yme0VrfO3x9Fd8KbMoKX1YQ3yTvpvPndd5uNlDUXZLN+JrwZD/y23Z3jQhKa
+1alcmXls50aaxBE0Z3wpozgZTXhTeLee+5J6U0/84k5yHbNYXgzXmRqu3fr
2tXzuy6dOyt/Jg/q/L2p3Llv316W8wBvygheVlPefOP11zzrHq1RyVFHMhFk
nXZ4M36ka7u71zBOx7x5n2v/vW530rtdOc4BvCkjeFlNedPtEonzPcFRIei7
LeDN+JKu7U5UqlQpoztPnfpT6+90uxPeTEVYEbyspryZqo9TvrMtKph4HxC8
GX/Std0bPPRQWm++Mniw9t9H7ty6dUuCEyeOs+QMb8oIXlZT3iTc89OJKPVt
mnqHGrxpB+na7pn45Zef2cuvC7wpI3hZTXrzzTdeV44VpTnpJt8HBG/aRfvC
Qm1v0hg8d7l1gTdlBC+rSW9++eUXyrFGjHjLSBlN8P777xlxJjF79izlONT2
4s4PZI9zXY9Sl1/u253/+uRj9rLrcD28+e8IXlaT3nT3cc6YPs1IGU0wedJE
I84kJrmOhfvNeOP0JvU16bTd6R2u3OX3S4sWLURBQYGoWqVK4Lko8KY5bxL9
+vYtORZ3PXFCbes+vXuLF/r0CfwONXjTLpzepPnp9Fli3L1Zs4zeDHrfFibH
jx9LvBfkjz9+D7wWLrxp1pvy+kRpPMg08KZdeHlTkm7cXbJt24/sOYQNvGne
m7azZs1qeNMi0nmTyDTu/sgjj8TuXQZBgTfhTV0wnm4XmbwpOXfubGL97bi3
100Ab8KbusCbduHXm5KDBw8krdEZtf78XANvwpu6wJt2oetNZz2oVrVqYr/C
wkL2PMIE3oQ3dYE37SJbb+Yz8Ca8qQu8aRfwpj7wJrypC7xpF/CmPvAmvKkL
vGkX8KY+8Ca8qQu8aRfwpj7wJrypC7xpF/CmPvAmvKkLvGkX8KY+8Ca8qQu8
aRfwpj7wJrypC7xpF/CmPvAmvKkLvGkX8KY+8Ca8qQu8aRfwpj7wJrypC7xp
F/CmPvAmvKkLvGkX8KY+8Ca8qQu8aRfwpj7wJrypC7xpF/CmPvAmvKkLvGkX
8KY+8Ca8qQu8aRfwpj7wZrS8Se/AWr9+vZgzd7YYM3a0eHnwS+KNN98U02fM
SPjqwoXzrOUj4E27iIM3Dx8+JF4c9GIJ77w7jrU88GY0vEnvNO/Vu7eocftt
olyF8impW7+eeP2NNxLvGuaqM/CmXcTBm09366r8Dh5r9jhreeBNfm+OGj1K
VKhUMa0v3dSpV1esXbsm9LIS8KZdRN2bMz6ckVT/4c0gEbys3N7s0/cFLV86
IdeuWbs61PIS8KZdRNmbP/+8XVStXg3eNBrBy8rpzTlz53j6sGLlSqLTU53E
q0NeFYNeGiSeaNUyZfv91jtuF7t27QytzAS8aRdR9WbxmWLRsPEjnvUe3gwS
wcvK5c3ffz/i6cLWbVqL/fv3JW1/9uwZMfy14aJ8xQpJ+9A9a5h1Bt60i6h6
8+XBg1O2teDNIBG8rFzenD5jWlJdaPBwA3Hs2NG0+82bPy9pvyrVqiY8HFad
gTftIoreXL5iWdo+KngzSAQvK5c36b7S3Tbfs2e3r307dOyYVI/Ip2HVGXjT
LqLmzYMHD4i7at4Nb+YsgpeVw5sXL15IGj9v066t7/1XrlyRVI/GTxif83JL
4E27iJI36fnkwvaFSt2m/v1+/fvDm8YieFk5vHn+/Lkk7019b4rv/YuKdiXt
/+KgQTkvtwTetIsoeXPCxPFKvaYxAGqH9X9xILxpLIKXlcObxcWnk7z39Tcb
fO+/bduPSfu/NPjlnJdbAm/aRVS8+f3334lKVSor9frjjz9KfAdvmozgZeXw
5unTyd6ke0jfZZ73edL+06Z/kPNyS+BNu4iCN0+ePCHuf+B+pU736Nmj5Ht4
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
     "], {{0, 392.}, {334., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->72],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{169.766845703125, Automatic},
   ImageSizeRaw->{334., 392.},
   PlotRange->{{0, 334.}, {0, 392.}}]], "Input",ExpressionUUID->
  "d099750f-acd1-4068-a42e-7a0d0067f50b"],
 "\n",
 StyleBox["Question 5.  ",
  FontWeight->"Bold"],
 "Find the Markov transition matrix for the \[OpenCurlyDoubleQuote]Internet\
\[CloseCurlyDoubleQuote] represented by the above link diagram.    For \
instance, if you are at page 2 at time t, at time t + 1, you are at page 3 \
with probability 1/2 and page 4 with probability 1/2.  \n\t     p1        p2  \
        p3          p4\np1           0            0            1           \
1/2\np2          1/3         0            0            0\np3          1/3     \
  1/2          0           1/2\np4          1/3        1/2         0          \
   0"
}], "Text",
 CellChangeTimes->{{3.846169878530366*^9, 3.846169928488399*^9}, {
   3.860785382692739*^9, 3.860785449102222*^9}, {3.879190583458685*^9, 
   3.8791905981078444`*^9}, {3.911486868373885*^9, 3.9114869104094453`*^9}, {
   3.911487788292159*^9, 3.9114880390391035`*^9}, 
   3.9114910965340223`*^9},ExpressionUUID->"b1fdcd85-ee0a-4d37-8802-\
34472d2b8c18"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MTM", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1", ",", 
      RowBox[{"1", "/", "2"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "3"}], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "3"}], ",", 
      RowBox[{"1", "/", "2"}], ",", "0", ",", 
      RowBox[{"1", "/", "2"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "3"}], ",", 
      RowBox[{"1", "/", "2"}], ",", "0", ",", "0"}], "}"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.91148804465886*^9, 3.911488129963231*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"483c60f5-9e60-46da-ae2a-51cb0e1616c0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "2"], ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.911488133088311*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"9afab706-3850-4b90-9b74-efa32f81fdc9"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Question 6.  ",
  FontWeight->"Bold"],
 "Suppose that the \[OpenCurlyDoubleQuote]random web surfer\
\[CloseCurlyDoubleQuote] starts at a random webpage; so the initial state \
vector would be: u = (.25, .25, .25, .25).  Find the probability vector for \
the surfer after ",
 StyleBox["t = 3 ",
  FontSlant->"Italic"],
 "clicks/transitions.  "
}], "Text",
 CellChangeTimes->{{3.8461698721360826`*^9, 3.8461698730797577`*^9}, {
  3.846169939710359*^9, 3.846170048648157*^9}, {3.846231430369892*^9, 
  3.846231432466611*^9}},
 FontWeight->"Plain",ExpressionUUID->"73dba307-6342-4873-99ce-96ea7eeae1eb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Define", " ", "the", " ", "initial", " ", "state", " ", "vector"}], 
   "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"u", "=", 
     RowBox[{"{", 
      RowBox[{"0.25", ",", "0.25", ",", "0.25", ",", "0.25"}], "}"}]}], ";"}],
    "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Calculate", " ", "the", " ", "probability", " ", "vector", " ", "after",
       " ", "t"}], "=", 
     RowBox[{"3", " ", "transitions"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"u3", "=", 
     RowBox[{
      RowBox[{"MatrixPower", "[", 
       RowBox[{"MTM", ",", "3"}], "]"}], ".", "u"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Display", " ", "the", " ", "result"}], "*)"}], 
   "\[IndentingNewLine]", "u3"}]}]], "Input",
 CellChangeTimes->{{3.9114882659093*^9, 3.911488278051302*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"5af63b3d-7a9e-4ff6-90c9-f7aa7e1a1d18"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.3541666666666667`", ",", "0.14583333333333331`", ",", 
   "0.29166666666666663`", ",", "0.20833333333333331`"}], "}"}]], "Output",
 CellChangeTimes->{3.9114882838114133`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"6d0da6df-6b0e-4003-b790-1e4b18e59433"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Question 7.  ",
  FontWeight->"Bold"],
 "Find the steady state by finding the eigenvector with eigenvalue 1; and \
rescale it so that it is a probability vector.  If you want to find the sum \
of the entries in a vector, you can type ",
 StyleBox["Norm[v, 1]",
  FontWeight->"Bold"],
 ".  "
}], "Text",
 CellChangeTimes->{{3.84617003600918*^9, 3.846170084403718*^9}, {
  3.846171038310052*^9, 
  3.846171050958631*^9}},ExpressionUUID->"29db5489-b072-42cb-9b57-\
dcf58ef564e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Find", " ", "eigenvalues", " ", "and", " ", "eigenvectors"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"eigenvalues", "=", 
     RowBox[{"Eigenvalues", "[", "MTM", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"eigenvectors", "=", 
     RowBox[{"Eigenvectors", "[", "MTM", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Find", " ", "the", " ", "index", " ", "of", " ", "the", " ", 
     "eigenvalue", " ", "1"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"index", "=", 
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"eigenvalues", ",", "1"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Steady", " ", "state", " ", "eigenvector"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"steadyStateEigenvector", "=", 
     RowBox[{"eigenvectors", "[", 
      RowBox[{"[", "index", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Rescale", " ", "the", " ", "eigenvector", " ", "to", " ", "form", " ", 
     "a", " ", "probability", " ", "vector"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"steadyStateProbabilityVector", "=", 
     RowBox[{"steadyStateEigenvector", "/", 
      RowBox[{"Norm", "[", 
       RowBox[{"steadyStateEigenvector", ",", "1"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Display", " ", "the", " ", "steady", " ", "state", " ", "probability", 
     " ", "vector"}], "*)"}], "\n", 
   "steadyStateProbabilityVector"}]}]], "Input",
 CellChangeTimes->{3.911488341426647*^9, 3.9114924273977957`*^9},
 CellLabel->"In[94]:=",ExpressionUUID->"ca55359a-f8b3-4791-8c36-c6f508bc2c27"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["12", "31"], ",", 
   FractionBox["4", "31"], ",", 
   FractionBox["9", "31"], ",", 
   FractionBox["6", "31"]}], "}"}]], "Output",
 CellChangeTimes->{3.911488343730119*^9, 3.911492432811985*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"be3d5ec8-e0ae-4a27-a3c6-5e255af50def"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Question 8.  ",
  FontWeight->"Bold"],
 "The steady state provides your PageRanking (as it provides the long-term \
probability that the surfer is on that page).  Which webpage has largest \
PageRank?  \n",
 StyleBox["Just looking at our probability vector. Page One with the rank: \
12/31. Intuitively, this is reasonable, as looking at the matrix (see \
question 5), the value of the links pointing to page 1 is more than any other \
page\[CloseCurlyQuote]s.",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.8461700910661297`*^9, 3.8461700998358307`*^9}, {
  3.846170143185463*^9, 3.846170160615313*^9}, {3.846182027623143*^9, 
  3.846182031895308*^9}, {3.911488396626606*^9, 3.911488400500106*^9}, {
  3.9114884335403748`*^9, 3.9114884616521697`*^9}, {3.911488502641078*^9, 
  3.9114885802710104`*^9}},ExpressionUUID->"bc67301f-8000-4802-bd0e-\
4aa71f686189"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "the", " ", "index", " ", "of", " ", "the", " ", "maximum", 
    " ", "probability", " ", "in", " ", "the", " ", "steady", " ", "state", 
    " ", "vector"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"maxProbabilityIndex", "=", 
     RowBox[{
      RowBox[{"FirstPosition", "[", 
       RowBox[{"steadyStateProbabilityVector", ",", 
        RowBox[{"Max", "[", "steadyStateProbabilityVector", "]"}]}], "]"}], 
      "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Display", " ", "the", " ", "webpage", " ", "with", " ", "the", " ", 
     "largest", " ", "PageRank"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"webpageWithLargestPageRank", "=", "maxProbabilityIndex"}], ";"}],
    "\[IndentingNewLine]", "\n", "webpageWithLargestPageRank"}]}]], "Input",
 CellChangeTimes->{3.911488406513561*^9},
 CellLabel->"In[72]:=",ExpressionUUID->"fb89e849-3dea-47ae-af87-6af41a89f80e"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.911488422418809*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"434e381e-7e2f-4c18-ae31-1c7ce3436dfb"]
}, Open  ]],

Cell[TextData[{
 "\nSome practicality and the insight for PageRank.  No one is going to \
search the internet for an \[OpenCurlyDoubleQuote]infinite\
\[CloseCurlyDoubleQuote] amount of time.  Since the Internet is very large, \
allowing unreasonably long surfing times could lead to undesired results. \n\n\
For instance: \n",
 StyleBox["Suppose that there\[CloseCurlyQuote]s a corner of the Internet \
that is only accessible by, say, one webpage.  But then once you\
\[CloseCurlyQuote]re in that corner, it is very difficult to leave (since \
there is only perhaps one bridge back).  \n\n",
  FontSlant->"Italic"],
 "If we let our surfer to click around indefinitely, it\[CloseCurlyQuote]s \
not unreasonable to think that they\[CloseCurlyQuote]ll end up in such a \
corner of the internet.  (Which isn\[CloseCurlyQuote]t what we want to \
consider being \[OpenCurlyDoubleQuote]important\[CloseCurlyDoubleQuote] \
anyway.)\n\n",
 StyleBox["So, to make the model more realistic, we letting the surfer \
\[OpenCurlyDoubleQuote]sign off/stop surfing and begin again at a random \
webpage.\[CloseCurlyDoubleQuote] ",
  FontWeight->"Bold"],
 " \n\nSo we suppose that, at each time, the random walker will continue on \
their typical random walk (taking a random link) with probability .85, and \
with probability 0.15 will hop to a random webpage.  Lots of studies have \
shown that this is a reasonable dampening factor.  Since the probability of \
signing off at a given moment is 0.15, the expected value for the number of \
jumps before signing off is 1/0.15 =  6.67.  (This is a geometric \
distribution from probability, if you want to know more, feel free to ask.) \
The new transition matrix would then be this:  (If you changed the name of \
your transition matrix to something other than T, fill it in.)\n\nNote:\n(* \
Define the teleportation probability *)\nteleportationProbability = 0.15;\n\n\
(* Calculate the dampening factor matrix *)\ndampeningFactorMatrix = \
teleportationProbability * ConstantArray[1, {4, 4}]/4;\n\n(* Calculate the \
new transition matrix PageRankTransition *)\nPageRankTransition = (1 - \
teleportationProbability) * MTM + dampeningFactorMatrix;\n\n(* Display the \
new transition matrix PageRankTransition *)\nPageRankTransition\n"
}], "Text",
 CellChangeTimes->{{3.846170167566725*^9, 3.8461705181834517`*^9}, {
  3.8461705666643963`*^9, 3.8461706574045057`*^9}, {3.846171089117446*^9, 
  3.846171089431588*^9}, {3.846171597508089*^9, 3.846171618581106*^9}, {
  3.846182039652635*^9, 3.8461822332032824`*^9}, {3.8462314583938093`*^9, 
  3.846231526750372*^9}, {3.8607854900641336`*^9, 3.86078552811928*^9}, {
  3.879190651817768*^9, 3.879190703808426*^9}, {3.911488793106126*^9, 
  3.9114888388859034`*^9}, {3.91148890065882*^9, 
  3.9114889111337943`*^9}},ExpressionUUID->"1168a9e5-7920-4ef1-8a2c-\
883757fa3f1d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PageRankTransition", " ", "=", " ", 
  RowBox[{
   RowBox[{"0.85", "*", "MTM"}], " ", "+", " ", 
   RowBox[{"0.15", " ", "*", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "4"}], ",", " ", 
        RowBox[{"1", "/", "4"}], ",", " ", 
        RowBox[{"1", "/", "4"}], ",", " ", 
        RowBox[{"1", "/", "4"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "4"}], ",", " ", 
        RowBox[{"1", "/", "4"}], ",", " ", 
        RowBox[{"1", "/", "4"}], ",", " ", 
        RowBox[{"1", "/", "4"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "4"}], ",", " ", 
        RowBox[{"1", "/", "4"}], ",", " ", 
        RowBox[{"1", "/", "4"}], ",", " ", 
        RowBox[{"1", "/", "4"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "4"}], ",", " ", 
        RowBox[{"1", "/", "4"}], ",", " ", 
        RowBox[{"1", "/", "4"}], ",", " ", 
        RowBox[{"1", "/", "4"}]}], "}"}]}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.846170695692244*^9, 3.8461707350069227`*^9}, {
   3.846170772380589*^9, 3.846170774451963*^9}, {3.846170851649873*^9, 
   3.8461708531246967`*^9}, {3.846170958602681*^9, 3.846170961259797*^9}, 
   3.846171007969021*^9, {3.846171078681522*^9, 3.846171081343402*^9}, {
   3.846171589653659*^9, 3.846171589903598*^9}, {3.846171621466991*^9, 
   3.8461716215835247`*^9}, {3.911488758160248*^9, 3.9114887606365356`*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"90ec8195-2c69-4a14-b21c-69665d527fa1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.0375`", ",", "0.0375`", ",", "0.8875`", ",", "0.46249999999999997`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.3208333333333333`", ",", "0.0375`", ",", "0.0375`", ",", "0.0375`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.3208333333333333`", ",", "0.46249999999999997`", ",", "0.0375`", ",", 
     "0.46249999999999997`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.3208333333333333`", ",", "0.46249999999999997`", ",", "0.0375`", ",", 
     "0.0375`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.911488741319273*^9, 3.9114887637795105`*^9}},
 CellLabel->"Out[76]=",ExpressionUUID->"b5ce432e-42e5-4008-9d92-ffb67c33568d"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Question 9.  ",
  FontWeight->"Bold"],
 "Find the associated eigenvalues and eigenvectors of PageRankTransition.  \
You\[CloseCurlyQuote]ll likely want to use the [[1]] to just focus on the \
first eigenvector.   If you don\[CloseCurlyQuote]t like the imaginary part \
(which will always turn out to be zero for the eigenvector with eigenvalue \
1), you can use the function ",
 StyleBox["Re[   ]",
  FontWeight->"Bold"],
 " to just grab the real part.  "
}], "Text",
 CellChangeTimes->{{3.846171090798908*^9, 3.846171104311954*^9}, {
  3.846171239181164*^9, 3.846171257057513*^9}, {3.846181248856379*^9, 
  3.846181279383565*^9}, {3.8461817148154783`*^9, 3.8461817538574038`*^9}, {
  3.8461822636782627`*^9, 3.846182277775022*^9}, {3.846231545730323*^9, 
  3.846231548050177*^9}},ExpressionUUID->"7fc9260e-b3b9-4cf4-807d-\
c1553637dcd1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Find", " ", "eigenvalues", " ", "and", " ", "eigenvectors"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"eigenvalues", "=", 
     RowBox[{"Eigenvalues", "[", "PageRankTransition", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"eigenvectors", "=", 
     RowBox[{"Eigenvectors", "[", "PageRankTransition", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Select", " ", "the", " ", "first", " ", "eigenvector", " ", "and", " ", 
     "grab", " ", "the", " ", "real", " ", "part"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"firstEigenvector", "=", 
     RowBox[{"Re", "[", 
      RowBox[{"eigenvectors", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Display", " ", "the", " ", "eigenvalues", " ", "and", " ", "the", " ", 
     "real", " ", "part", " ", "of", " ", "the", " ", "first", " ", 
     "eigenvector"}], "*)"}], "\[IndentingNewLine]", "eigenvalues", "\n", 
   "firstEigenvector", "\n"}]}]], "Input",
 CellChangeTimes->{
  3.9114888851341033`*^9, {3.9114889210870376`*^9, 3.911488926497961*^9}, {
   3.911491198050913*^9, 3.911491254745246*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"baa3d3ce-209d-43a2-bda9-eda28f0cd631"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1.0000000000000004`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.30652983348019425`"}], "+", 
    RowBox[{"0.349329213670796`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.30652983348019425`"}], "-", 
    RowBox[{"0.349329213670796`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.236940333039612`"}], "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.911488935571912*^9, 3.911491258567913*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"932ad619-ba2f-4d3d-90ba-b73d7ffdd15c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.6964830662945717`", ",", "0.2682809593810988`", ",", 
   "0.5447780231432439`", ",", "0.3823003671180657`"}], "}"}]], "Output",
 CellChangeTimes->{3.911488935571912*^9, 3.911491258567913*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"381294a3-714e-4e1d-a673-87b602e7ed0b"]
}, Open  ]],

Cell[TextData[{
 StyleBox["\nQuestion 10.  ",
  FontWeight->"Bold"],
 "You\[CloseCurlyQuote]re the owner of webpage 3 and are a bit peeved that \
your webpage isn\[CloseCurlyQuote]t ranked as highly as #1.  So you decide to \
create a webpage, #5, with links to and from webpage #3.  Write down the new \
transition matrix.  Then compute the PageRanks of the webpages.  What \
happened to the ranking of webpage 3?\n         p1               p2           \
     p3         p4             p5\np1      0               0                 \
1/2         1/2             0\n p2     1/3            0                 0     \
           0              0\n p3      1/3          1/2              0         \
    1/2             1\n p4     1/3           1/2              0               \
 0              0\n p5       0             0                 1/2              \
0             0"
}], "Text",
 CellChangeTimes->{{3.846171265975801*^9, 3.846171464931445*^9}, 
   3.846171595270999*^9, {3.846181712913262*^9, 3.846181713233667*^9}, {
   3.846181758412487*^9, 3.846181765949955*^9}, {3.8461822925655937`*^9, 
   3.846182293318255*^9}, 3.860785595880074*^9, 3.911489021285422*^9, {
   3.9114893648312254`*^9, 3.911489369683932*^9}, {3.91149206869203*^9, 
   3.9114922738387833`*^9}},
 FontWeight->"Plain",ExpressionUUID->"0d06a814-f612-4061-9007-7943f8c79142"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"The", " ", "tampered", " ", "matrix"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"newMTM", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"1", "/", "2"}], ",", 
       RowBox[{"1", "/", "2"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "3"}], ",", "0", ",", "0", ",", "0", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "3"}], ",", 
       RowBox[{"1", "/", "2"}], ",", "0", ",", 
       RowBox[{"1", "/", "2"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "3"}], ",", 
       RowBox[{"1", "/", "2"}], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"1", "/", "2"}], ",", "0", ",", "0"}], "}"}]}], 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.9114922869097567`*^9, 3.911492373275169*^9}, {
  3.9115134985352325`*^9, 
  3.9115135090944777`*^9}},ExpressionUUID->"1d56c819-e3fc-41d8-9da4-\
58f790f47a46"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "2"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "2"], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.91151337595703*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"ccb8c74c-6054-4573-b026-1150828e35b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      FractionBox["1", "2"], ",", 
      FractionBox["1", "2"], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["1", "3"], ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["1", "3"], ",", 
      FractionBox["1", "2"], ",", "0", ",", 
      FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["1", "3"], ",", 
      FractionBox["1", "2"], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      FractionBox["1", "2"], ",", "0", ",", "0"}], "}"}]}], "}"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"DAMPEN", " ", "THE", " ", "MATRIX"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Define", " ", "the", " ", "teleportation", " ", "probability"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"teleportationProbability", "=", "0.15"}], ";"}], 
  "\[IndentingNewLine]", "\n", 
  RowBox[{"(*", 
   RowBox[{
   "Calculate", " ", "the", " ", "dampening", " ", "factor", " ", "matrix"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dampeningFactorMatrix", "=", 
    RowBox[{"teleportationProbability", "*", 
     RowBox[{
      RowBox[{"ConstantArray", "[", 
       RowBox[{"1", ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "5"}], "}"}]}], "]"}], "/", "4"}]}]}], ";"}], "\n",
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Calculate", " ", "the", " ", "new", " ", "transition", " ", "matrix", " ",
     "PageRankTransition"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"newPageRankTransition", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "teleportationProbability"}], ")"}], "*", "newMTM"}],
      "+", "dampeningFactorMatrix"}]}], ";"}], "\n", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Display", " ", "the", " ", "new", " ", "transition", " ", "matrix", " ", 
    "PageRankTransition"}], 
   "*)"}]}], "\[IndentingNewLine]", "newPageRankTransition"}], "Input",
 CellChangeTimes->{{3.911513313527666*^9, 3.911513357645894*^9}, {
  3.9115138095168543`*^9, 3.9115138303202806`*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"494af845-914e-4aff-8869-1a39ff2fc539"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "2"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "2"], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.911513382111487*^9, 3.9115138435336514`*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"f1ed09e6-bbcb-4093-97e0-61da110beccd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.0375`", ",", "0.0375`", ",", "0.46249999999999997`", ",", 
     "0.46249999999999997`", ",", "0.0375`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.3208333333333333`", ",", "0.0375`", ",", "0.0375`", ",", "0.0375`", 
     ",", "0.0375`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.3208333333333333`", ",", "0.46249999999999997`", ",", "0.0375`", ",", 
     "0.46249999999999997`", ",", "0.8875`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.3208333333333333`", ",", "0.46249999999999997`", ",", "0.0375`", ",", 
     "0.0375`", ",", "0.0375`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0375`", ",", "0.0375`", ",", "0.46249999999999997`", ",", "0.0375`", 
     ",", "0.0375`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.911513382111487*^9, 3.9115138435336514`*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"4f414fde-ff81-49c6-9276-f009ae63bb5e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  
  RowBox[{"(*", 
   RowBox[{"CALCULATE", " ", "THE", " ", "NEW", " ", "PAGE", " ", "RANKS"}], 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Find", " ", "eigenvalues", " ", "and", " ", "eigenvectors"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"eigenvalues", "=", 
     RowBox[{"Eigenvalues", "[", "newPageRankTransition", "]"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"eigenvectors", "=", 
     RowBox[{"Eigenvectors", "[", "newPageRankTransition", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "The", " ", "index", " ", "of", " ", "the", " ", "eigenvalue", " ", "1", 
     " ", "is", " ", "the", " ", "first"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"index", "=", "1"}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Steady", " ", "state", " ", 
     RowBox[{"eigenvector", ".", " ", "Grab"}], " ", "the", " ", "real", " ", 
     "part", " ", "and", " ", "find", " ", "the", " ", "absolute", " ", 
     "value"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"steadyStateEigenvector", "=", 
     RowBox[{"Abs", "[", 
      RowBox[{"Re", "[", 
       RowBox[{"eigenvectors", "[", 
        RowBox[{"[", "index", "]"}], "]"}], "]"}], "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Rescale", " ", "the", " ", "eigenvector", " ", "to", " ", "form", " ", 
     "a", " ", "probability", " ", "vector"}], "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"steadyStateProbabilityVector", "=", 
     RowBox[{"steadyStateEigenvector", "/", 
      RowBox[{"Norm", "[", 
       RowBox[{"steadyStateEigenvector", ",", "1"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Display", " ", "the", " ", "steady", " ", "state", " ", "probability", 
     " ", "vector"}], "*)"}], "\n", 
   "steadyStateProbabilityVector"}]}]], "Input",
 CellChangeTimes->{{3.9114924553556147`*^9, 3.911492485732217*^9}, {
  3.911513406372865*^9, 3.9115134661109858`*^9}, {3.911513607624792*^9, 
  3.9115137942660317`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"2e600470-8815-4ed1-acd2-e1477b14253e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.23547564070457055`", ",", "0.10045117898759358`", ",", 
   "0.345002444649589`", ",", "0.14159985471745115`", ",", 
   "0.17747088094079555`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.911492499908063*^9, {3.911513453864635*^9, 3.9115134678837605`*^9}, {
   3.9115136604371037`*^9, 3.911513688367345*^9}, {3.911513756151596*^9, 
   3.911513767494898*^9}, 3.9115137981749797`*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"a79c5926-372d-42da-8bd3-9d26af8cefdd"]
}, Open  ]],

Cell[TextData[{
 StyleBox["The new ranking of page 3 is now larger than the ranking of page \
1.\nSo the SEO manipulation worked!",
  FontSlant->"Italic"],
 "\n\nBut... how can we compute an eigenvector of a",
 StyleBox[" ",
  FontSlant->"Italic"],
 "matrix which is the size of the Internet?  We don\[CloseCurlyQuote]t.  \
Actually, we can just approximate it by taking a few matrix powers of some \
sub-internet (iterating the system a relatively short amount of time).  It \
turns out that this is not too bad of an approximation because the gap \
between the eigenvalue of 1 and that of the next one is quite large.    \
(Remember when we diagonalized and took powers of the diagonal in the \
Fibonacci lab and those terms very quickly went to zero?  This is exactly \
what\[CloseCurlyQuote]s happening here.)  There is always a fairly decent \
\[OpenCurlyDoubleQuote]eigenvalue gap\[CloseCurlyDoubleQuote] in practical \
PageRank matrices.  So, we can get a decent approximation of the steady state \
\[OpenCurlyDoubleQuote]fairly quickly\[CloseCurlyDoubleQuote] (given the size \
of the data we\[CloseCurlyQuote]re working with).  \n"
}], "Text",
 CellChangeTimes->{{3.8461716762249403`*^9, 3.846171889633885*^9}, {
  3.846171932028393*^9, 3.846171993647715*^9}, {3.846182302545752*^9, 
  3.846182454540985*^9}, {3.8462315626929083`*^9, 3.846231647317089*^9}, {
  3.860785607683134*^9, 3.8607856411423197`*^9}, {3.911492571449325*^9, 
  3.911492618099454*^9}},ExpressionUUID->"4d19ddc4-4d06-44ab-9d6b-\
b08936f24e2c"],

Cell[TextData[{
 StyleBox["Want to learn more?  ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox["The Wikipedia page for Page Rank is quite good!  ",
  FontSlant->"Italic"],
 "In general, math Wikipedia is a great place to learn a bit about various \
topics.  E.g., Markov chains, networks, network centrality, ... "
}], "Text",
 CellChangeTimes->{{3.8461714817452602`*^9, 3.8461715125059423`*^9}, {
  3.846171995065831*^9, 3.846172002876771*^9}, {3.8462316512128067`*^9, 
  3.8462316866064177`*^9}},
 FontWeight->"Plain",ExpressionUUID->"fc7f4b2a-3db3-4be0-9030-c6447047b52c"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.846231833581551*^9, 
  3.860785290606063*^9},ExpressionUUID->"e11afbb2-07ad-4e41-8d19-\
c8afc483b292"]
}, Open  ]]
},
WindowSize->{1141.2, 573.6},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"40905dd5-9aac-4c1f-aeb6-5d7f30915443"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 235, 5, 53, "Subtitle",ExpressionUUID->"82221673-937f-4055-af58-c2e5c353c2d2"],
Cell[818, 29, 84251, 1389, 574, "Text",ExpressionUUID->"3bceff05-81a6-452e-9d22-1b6a3b8c3528"],
Cell[85072, 1420, 878, 22, 48, "Input",ExpressionUUID->"740f506a-47df-4a4a-a74a-f0160ae58884"],
Cell[85953, 1444, 902, 23, 58, "Text",ExpressionUUID->"719c6242-5a84-4e7c-aab3-567d27148ccb"],
Cell[CellGroupData[{
Cell[86880, 1471, 1258, 33, 219, "Input",ExpressionUUID->"c6b53ec6-6d69-423e-b760-a46d25ed04ba"],
Cell[88141, 1506, 276, 7, 32, "Output",ExpressionUUID->"ce044541-23bd-4abe-b58d-6f2666514d50"],
Cell[88420, 1515, 287, 7, 32, "Output",ExpressionUUID->"b8557ac0-0bdf-43e5-845b-12701acec55a"],
Cell[88710, 1524, 298, 7, 32, "Output",ExpressionUUID->"f6c5a4c6-9ca9-4055-865a-9c6eb60b1072"]
}, Open  ]],
Cell[89023, 1534, 545, 16, 58, "Text",ExpressionUUID->"ae9a7491-1946-453c-b45d-7612265d27e5"],
Cell[CellGroupData[{
Cell[89593, 1554, 685, 17, 67, "Input",ExpressionUUID->"f969c4d4-119b-4cb4-b568-931fdb07e685"],
Cell[90281, 1573, 338, 8, 32, "Output",ExpressionUUID->"50a17fe3-2a30-40f3-8f7a-82da5a98e13f"],
Cell[90622, 1583, 347, 8, 32, "Output",ExpressionUUID->"b11256a7-1852-4a68-88ae-00f771f86a5e"]
}, Open  ]],
Cell[90984, 1594, 994, 26, 127, "Text",ExpressionUUID->"464e7ac1-224d-4feb-bb95-47f8857ae08a"],
Cell[CellGroupData[{
Cell[92003, 1624, 732, 17, 143, "Input",ExpressionUUID->"545e40b6-ee2b-47fb-898b-ac048509d08f"],
Cell[92738, 1643, 265, 6, 32, "Output",ExpressionUUID->"5201c9aa-8add-43b6-bcf4-3f3e450fad77"],
Cell[93006, 1651, 644, 17, 32, "Output",ExpressionUUID->"5c765dcc-7ebe-4139-9dd9-1bdf81d7d8ec"]
}, Open  ]],
Cell[93665, 1671, 452, 11, 58, "Text",ExpressionUUID->"1aecb170-16a8-4038-96c2-5fdcb1ca89b9"],
Cell[CellGroupData[{
Cell[94142, 1686, 1503, 36, 238, "Input",ExpressionUUID->"68cf4ba9-3a26-4a9f-9db9-694683ea04c5"],
Cell[95648, 1724, 342, 7, 32, "Output",ExpressionUUID->"48fe06ab-5fe7-406d-8ba2-cecb9e280807"]
}, Open  ]],
Cell[96005, 1734, 1940, 32, 380, "Text",ExpressionUUID->"3b6b0209-7137-4e05-a63d-a04a1dff7c6d"],
Cell[97948, 1768, 17433, 293, 375, "Text",ExpressionUUID->"b1fdcd85-ee0a-4d37-8802-34472d2b8c18"],
Cell[CellGroupData[{
Cell[115406, 2065, 749, 21, 28, "Input",ExpressionUUID->"483c60f5-9e60-46da-ae2a-51cb0e1616c0"],
Cell[116158, 2088, 658, 19, 48, "Output",ExpressionUUID->"9afab706-3850-4b90-9b74-efa32f81fdc9"]
}, Open  ]],
Cell[116831, 2110, 626, 14, 58, "Text",ExpressionUUID->"73dba307-6342-4873-99ce-96ea7eeae1eb"],
Cell[CellGroupData[{
Cell[117482, 2128, 987, 28, 143, "Input",ExpressionUUID->"5af63b3d-7a9e-4ff6-90c9-f7aa7e1a1d18"],
Cell[118472, 2158, 298, 6, 32, "Output",ExpressionUUID->"6d0da6df-6b0e-4003-b790-1e4b18e59433"]
}, Open  ]],
Cell[118785, 2167, 503, 13, 58, "Text",ExpressionUUID->"29db5489-b072-42cb-9b57-dcf58ef564e5"],
Cell[CellGroupData[{
Cell[119313, 2184, 1883, 48, 295, "Input",ExpressionUUID->"ca55359a-f8b3-4791-8c36-c6f508bc2c27"],
Cell[121199, 2234, 329, 8, 48, "Output",ExpressionUUID->"be3d5ec8-e0ae-4a27-a3c6-5e255af50def"]
}, Open  ]],
Cell[121543, 2245, 899, 17, 104, "Text",ExpressionUUID->"bc67301f-8000-4802-bd0e-4aa71f686189"],
Cell[CellGroupData[{
Cell[122467, 2266, 1031, 24, 143, "Input",ExpressionUUID->"fb89e849-3dea-47ae-af87-6af41a89f80e"],
Cell[123501, 2292, 149, 2, 32, "Output",ExpressionUUID->"434e381e-7e2f-4c18-ae31-1c7ce3436dfb"]
}, Open  ]],
Cell[123665, 2297, 2853, 44, 725, "Text",ExpressionUUID->"1168a9e5-7920-4ef1-8a2c-883757fa3f1d"],
Cell[CellGroupData[{
Cell[126543, 2345, 1597, 37, 28, "Input",ExpressionUUID->"90ec8195-2c69-4a14-b21c-69665d527fa1"],
Cell[128143, 2384, 742, 20, 32, "Output",ExpressionUUID->"b5ce432e-42e5-4008-9d92-ffb67c33568d"]
}, Open  ]],
Cell[128900, 2407, 865, 17, 58, "Text",ExpressionUUID->"7fc9260e-b3b9-4cf4-807d-c1553637dcd1"],
Cell[CellGroupData[{
Cell[129790, 2428, 1349, 32, 219, "Input",ExpressionUUID->"baa3d3ce-209d-43a2-bda9-eda28f0cd631"],
Cell[131142, 2462, 671, 15, 32, "Output",ExpressionUUID->"932ad619-ba2f-4d3d-90ba-b73d7ffdd15c"],
Cell[131816, 2479, 315, 6, 32, "Output",ExpressionUUID->"381294a3-714e-4e1d-a673-87b602e7ed0b"]
}, Open  ]],
Cell[132146, 2488, 1348, 21, 219, "Text",ExpressionUUID->"0d06a814-f612-4061-9007-7943f8c79142"],
Cell[CellGroupData[{
Cell[133519, 2513, 1120, 32, 48, "Input",ExpressionUUID->"1d56c819-e3fc-41d8-9da4-58f790f47a46"],
Cell[134642, 2547, 837, 24, 48, "Output",ExpressionUUID->"ccb8c74c-6054-4573-b026-1150828e35b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135516, 2576, 2513, 69, 351, "Input",ExpressionUUID->"494af845-914e-4aff-8869-1a39ff2fc539"],
Cell[138032, 2647, 863, 24, 48, "Output",ExpressionUUID->"f1ed09e6-bbcb-4093-97e0-61da110beccd"],
Cell[138898, 2673, 962, 24, 52, "Output",ExpressionUUID->"4f414fde-ff81-49c6-9276-f009ae63bb5e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139897, 2702, 2340, 55, 390, "Input",ExpressionUUID->"2e600470-8815-4ed1-acd2-e1477b14253e"],
Cell[142240, 2759, 505, 10, 32, "Output",ExpressionUUID->"a79c5926-372d-42da-8bd3-9d26af8cefdd"]
}, Open  ]],
Cell[142760, 2772, 1523, 25, 219, "Text",ExpressionUUID->"4d19ddc4-4d06-44ab-9d6b-b08936f24e2c"],
Cell[144286, 2799, 587, 12, 58, "Text",ExpressionUUID->"fc7f4b2a-3db3-4be0-9030-c6447047b52c"],
Cell[144876, 2813, 150, 3, 28, "Input",ExpressionUUID->"e11afbb2-07ad-4e41-8d19-c8afc483b292"]
}, Open  ]]
}
]
*)

